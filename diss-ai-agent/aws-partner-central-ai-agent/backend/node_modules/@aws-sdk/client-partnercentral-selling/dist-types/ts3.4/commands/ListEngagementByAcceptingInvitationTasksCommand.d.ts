import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  ListEngagementByAcceptingInvitationTasksRequest,
  ListEngagementByAcceptingInvitationTasksResponse,
} from "../models/models_0";
import {
  PartnerCentralSellingClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../PartnerCentralSellingClient";
export { __MetadataBearer };
export { $Command };
export interface ListEngagementByAcceptingInvitationTasksCommandInput
  extends ListEngagementByAcceptingInvitationTasksRequest {}
export interface ListEngagementByAcceptingInvitationTasksCommandOutput
  extends ListEngagementByAcceptingInvitationTasksResponse,
    __MetadataBearer {}
declare const ListEngagementByAcceptingInvitationTasksCommand_base: {
  new (
    input: ListEngagementByAcceptingInvitationTasksCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    ListEngagementByAcceptingInvitationTasksCommandInput,
    ListEngagementByAcceptingInvitationTasksCommandOutput,
    PartnerCentralSellingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    input: ListEngagementByAcceptingInvitationTasksCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    ListEngagementByAcceptingInvitationTasksCommandInput,
    ListEngagementByAcceptingInvitationTasksCommandOutput,
    PartnerCentralSellingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class ListEngagementByAcceptingInvitationTasksCommand extends ListEngagementByAcceptingInvitationTasksCommand_base {
  protected static __types: {
    api: {
      input: ListEngagementByAcceptingInvitationTasksRequest;
      output: ListEngagementByAcceptingInvitationTasksResponse;
    };
    sdk: {
      input: ListEngagementByAcceptingInvitationTasksCommandInput;
      output: ListEngagementByAcceptingInvitationTasksCommandOutput;
    };
  };
}
