import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import {
  StartEngagementByAcceptingInvitationTaskRequest,
  StartEngagementByAcceptingInvitationTaskResponse,
} from "../models/models_0";
import {
  PartnerCentralSellingClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../PartnerCentralSellingClient";
export { __MetadataBearer };
export { $Command };
export interface StartEngagementByAcceptingInvitationTaskCommandInput
  extends StartEngagementByAcceptingInvitationTaskRequest {}
export interface StartEngagementByAcceptingInvitationTaskCommandOutput
  extends StartEngagementByAcceptingInvitationTaskResponse,
    __MetadataBearer {}
declare const StartEngagementByAcceptingInvitationTaskCommand_base: {
  new (
    input: StartEngagementByAcceptingInvitationTaskCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    StartEngagementByAcceptingInvitationTaskCommandInput,
    StartEngagementByAcceptingInvitationTaskCommandOutput,
    PartnerCentralSellingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    input: StartEngagementByAcceptingInvitationTaskCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    StartEngagementByAcceptingInvitationTaskCommandInput,
    StartEngagementByAcceptingInvitationTaskCommandOutput,
    PartnerCentralSellingClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class StartEngagementByAcceptingInvitationTaskCommand extends StartEngagementByAcceptingInvitationTaskCommand_base {
  protected static __types: {
    api: {
      input: StartEngagementByAcceptingInvitationTaskRequest;
      output: StartEngagementByAcceptingInvitationTaskResponse;
    };
    sdk: {
      input: StartEngagementByAcceptingInvitationTaskCommandInput;
      output: StartEngagementByAcceptingInvitationTaskCommandOutput;
    };
  };
}
