import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { PartnerCentralSellingServiceException as __BaseException } from "./PartnerCentralSellingServiceException";
export interface AcceptEngagementInvitationRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare const ValidationExceptionErrorCode: {
  readonly ACTION_NOT_PERMITTED: "ACTION_NOT_PERMITTED";
  readonly DUPLICATE_KEY_VALUE: "DUPLICATE_KEY_VALUE";
  readonly INVALID_ENUM_VALUE: "INVALID_ENUM_VALUE";
  readonly INVALID_RESOURCE_STATE: "INVALID_RESOURCE_STATE";
  readonly INVALID_STRING_FORMAT: "INVALID_STRING_FORMAT";
  readonly INVALID_VALUE: "INVALID_VALUE";
  readonly REQUIRED_FIELD_MISSING: "REQUIRED_FIELD_MISSING";
  readonly TOO_MANY_VALUES: "TOO_MANY_VALUES";
  readonly VALUE_OUT_OF_RANGE: "VALUE_OUT_OF_RANGE";
};
export type ValidationExceptionErrorCode =
  (typeof ValidationExceptionErrorCode)[keyof typeof ValidationExceptionErrorCode];
export interface ValidationExceptionError {
  FieldName?: string | undefined;
  Message: string | undefined;
  Code: ValidationExceptionErrorCode | undefined;
}
export declare const ValidationExceptionReason: {
  readonly BUSINESS_VALIDATION_FAILED: "BUSINESS_VALIDATION_FAILED";
  readonly REQUEST_VALIDATION_FAILED: "REQUEST_VALIDATION_FAILED";
};
export type ValidationExceptionReason =
  (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason: ValidationExceptionReason | undefined;
  ErrorList?: ValidationExceptionError[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare const CountryCode: {
  readonly AD: "AD";
  readonly AE: "AE";
  readonly AF: "AF";
  readonly AG: "AG";
  readonly AI: "AI";
  readonly AL: "AL";
  readonly AM: "AM";
  readonly AN: "AN";
  readonly AO: "AO";
  readonly AQ: "AQ";
  readonly AR: "AR";
  readonly AS: "AS";
  readonly AT: "AT";
  readonly AU: "AU";
  readonly AW: "AW";
  readonly AX: "AX";
  readonly AZ: "AZ";
  readonly BA: "BA";
  readonly BB: "BB";
  readonly BD: "BD";
  readonly BE: "BE";
  readonly BF: "BF";
  readonly BG: "BG";
  readonly BH: "BH";
  readonly BI: "BI";
  readonly BJ: "BJ";
  readonly BL: "BL";
  readonly BM: "BM";
  readonly BN: "BN";
  readonly BO: "BO";
  readonly BQ: "BQ";
  readonly BR: "BR";
  readonly BS: "BS";
  readonly BT: "BT";
  readonly BV: "BV";
  readonly BW: "BW";
  readonly BY: "BY";
  readonly BZ: "BZ";
  readonly CA: "CA";
  readonly CC: "CC";
  readonly CD: "CD";
  readonly CF: "CF";
  readonly CG: "CG";
  readonly CH: "CH";
  readonly CI: "CI";
  readonly CK: "CK";
  readonly CL: "CL";
  readonly CM: "CM";
  readonly CN: "CN";
  readonly CO: "CO";
  readonly CR: "CR";
  readonly CU: "CU";
  readonly CV: "CV";
  readonly CW: "CW";
  readonly CX: "CX";
  readonly CY: "CY";
  readonly CZ: "CZ";
  readonly DE: "DE";
  readonly DJ: "DJ";
  readonly DK: "DK";
  readonly DM: "DM";
  readonly DO: "DO";
  readonly DZ: "DZ";
  readonly EC: "EC";
  readonly EE: "EE";
  readonly EG: "EG";
  readonly EH: "EH";
  readonly ER: "ER";
  readonly ES: "ES";
  readonly ET: "ET";
  readonly FI: "FI";
  readonly FJ: "FJ";
  readonly FK: "FK";
  readonly FM: "FM";
  readonly FO: "FO";
  readonly FR: "FR";
  readonly GA: "GA";
  readonly GB: "GB";
  readonly GD: "GD";
  readonly GE: "GE";
  readonly GF: "GF";
  readonly GG: "GG";
  readonly GH: "GH";
  readonly GI: "GI";
  readonly GL: "GL";
  readonly GM: "GM";
  readonly GN: "GN";
  readonly GP: "GP";
  readonly GQ: "GQ";
  readonly GR: "GR";
  readonly GS: "GS";
  readonly GT: "GT";
  readonly GU: "GU";
  readonly GW: "GW";
  readonly GY: "GY";
  readonly HK: "HK";
  readonly HM: "HM";
  readonly HN: "HN";
  readonly HR: "HR";
  readonly HT: "HT";
  readonly HU: "HU";
  readonly ID: "ID";
  readonly IE: "IE";
  readonly IL: "IL";
  readonly IM: "IM";
  readonly IN: "IN";
  readonly IO: "IO";
  readonly IQ: "IQ";
  readonly IR: "IR";
  readonly IS: "IS";
  readonly IT: "IT";
  readonly JE: "JE";
  readonly JM: "JM";
  readonly JO: "JO";
  readonly JP: "JP";
  readonly KE: "KE";
  readonly KG: "KG";
  readonly KH: "KH";
  readonly KI: "KI";
  readonly KM: "KM";
  readonly KN: "KN";
  readonly KR: "KR";
  readonly KW: "KW";
  readonly KY: "KY";
  readonly KZ: "KZ";
  readonly LA: "LA";
  readonly LB: "LB";
  readonly LC: "LC";
  readonly LI: "LI";
  readonly LK: "LK";
  readonly LR: "LR";
  readonly LS: "LS";
  readonly LT: "LT";
  readonly LU: "LU";
  readonly LV: "LV";
  readonly LY: "LY";
  readonly MA: "MA";
  readonly MC: "MC";
  readonly MD: "MD";
  readonly ME: "ME";
  readonly MF: "MF";
  readonly MG: "MG";
  readonly MH: "MH";
  readonly MK: "MK";
  readonly ML: "ML";
  readonly MM: "MM";
  readonly MN: "MN";
  readonly MO: "MO";
  readonly MP: "MP";
  readonly MQ: "MQ";
  readonly MR: "MR";
  readonly MS: "MS";
  readonly MT: "MT";
  readonly MU: "MU";
  readonly MV: "MV";
  readonly MW: "MW";
  readonly MX: "MX";
  readonly MY: "MY";
  readonly MZ: "MZ";
  readonly NA: "NA";
  readonly NC: "NC";
  readonly NE: "NE";
  readonly NF: "NF";
  readonly NG: "NG";
  readonly NI: "NI";
  readonly NL: "NL";
  readonly NO: "NO";
  readonly NP: "NP";
  readonly NR: "NR";
  readonly NU: "NU";
  readonly NZ: "NZ";
  readonly OM: "OM";
  readonly PA: "PA";
  readonly PE: "PE";
  readonly PF: "PF";
  readonly PG: "PG";
  readonly PH: "PH";
  readonly PK: "PK";
  readonly PL: "PL";
  readonly PM: "PM";
  readonly PN: "PN";
  readonly PR: "PR";
  readonly PS: "PS";
  readonly PT: "PT";
  readonly PW: "PW";
  readonly PY: "PY";
  readonly QA: "QA";
  readonly RE: "RE";
  readonly RO: "RO";
  readonly RS: "RS";
  readonly RU: "RU";
  readonly RW: "RW";
  readonly SA: "SA";
  readonly SB: "SB";
  readonly SC: "SC";
  readonly SD: "SD";
  readonly SE: "SE";
  readonly SG: "SG";
  readonly SH: "SH";
  readonly SI: "SI";
  readonly SJ: "SJ";
  readonly SK: "SK";
  readonly SL: "SL";
  readonly SM: "SM";
  readonly SN: "SN";
  readonly SO: "SO";
  readonly SR: "SR";
  readonly SS: "SS";
  readonly ST: "ST";
  readonly SV: "SV";
  readonly SX: "SX";
  readonly SY: "SY";
  readonly SZ: "SZ";
  readonly TC: "TC";
  readonly TD: "TD";
  readonly TF: "TF";
  readonly TG: "TG";
  readonly TH: "TH";
  readonly TJ: "TJ";
  readonly TK: "TK";
  readonly TL: "TL";
  readonly TM: "TM";
  readonly TN: "TN";
  readonly TO: "TO";
  readonly TR: "TR";
  readonly TT: "TT";
  readonly TV: "TV";
  readonly TW: "TW";
  readonly TZ: "TZ";
  readonly UA: "UA";
  readonly UG: "UG";
  readonly UM: "UM";
  readonly US: "US";
  readonly UY: "UY";
  readonly UZ: "UZ";
  readonly VA: "VA";
  readonly VC: "VC";
  readonly VE: "VE";
  readonly VG: "VG";
  readonly VI: "VI";
  readonly VN: "VN";
  readonly VU: "VU";
  readonly WF: "WF";
  readonly WS: "WS";
  readonly YE: "YE";
  readonly YT: "YT";
  readonly ZA: "ZA";
  readonly ZM: "ZM";
  readonly ZW: "ZW";
};
export type CountryCode = (typeof CountryCode)[keyof typeof CountryCode];
export interface Address {
  City?: string | undefined;
  PostalCode?: string | undefined;
  StateOrRegion?: string | undefined;
  CountryCode?: CountryCode | undefined;
  StreetAddress?: string | undefined;
}
export declare const Industry: {
  readonly AEROSPACE_SATELLITE: "Aerospace";
  readonly AGRICULTURE: "Agriculture";
  readonly AUTOMOTIVE: "Automotive";
  readonly COMPUTERS_ELECTRONICS: "Computers and Electronics";
  readonly CONSUMER_GOODS: "Consumer Goods";
  readonly EDUCATION: "Education";
  readonly ENERGY_OIL_GAS: "Energy - Oil and Gas";
  readonly ENERGY_POWER_UTILITIES: "Energy - Power and Utilities";
  readonly FINANCIAL_SERVICES: "Financial Services";
  readonly GAMING: "Gaming";
  readonly GOVERNMENT: "Government";
  readonly HEALTHCARE: "Healthcare";
  readonly HOSPITALITY: "Hospitality";
  readonly LIFE_SCIENCES: "Life Sciences";
  readonly MANUFACTURING: "Manufacturing";
  readonly MARKETING_ADVERTISING: "Marketing and Advertising";
  readonly MEDIA_ENTERTAINMENT: "Media and Entertainment";
  readonly MINING: "Mining";
  readonly NON_PROFIT_ORGANIZATION: "Non-Profit Organization";
  readonly OTHER: "Other";
  readonly PROFESSIONAL_SERVICES: "Professional Services";
  readonly REALESTATE_CONSTRUCTION: "Real Estate and Construction";
  readonly RETAIL: "Retail";
  readonly SOFTWARE_INTERNET: "Software and Internet";
  readonly TELECOMMUNICATIONS: "Telecommunications";
  readonly TRANSPORTATION_LOGISTICS: "Transportation and Logistics";
  readonly TRAVEL: "Travel";
  readonly WHOLESALE_DISTRIBUTION: "Wholesale and Distribution";
};
export type Industry = (typeof Industry)[keyof typeof Industry];
export interface Account {
  Industry?: Industry | undefined;
  OtherIndustry?: string | undefined;
  CompanyName: string | undefined;
  WebsiteUrl?: string | undefined;
  AwsAccountId?: string | undefined;
  Address?: Address | undefined;
  Duns?: string | undefined;
}
export interface AccountReceiver {
  Alias?: string | undefined;
  AwsAccountId: string | undefined;
}
export interface AddressSummary {
  City?: string | undefined;
  PostalCode?: string | undefined;
  StateOrRegion?: string | undefined;
  CountryCode?: CountryCode | undefined;
}
export interface AccountSummary {
  Industry?: Industry | undefined;
  OtherIndustry?: string | undefined;
  CompanyName: string | undefined;
  WebsiteUrl?: string | undefined;
  Address?: AddressSummary | undefined;
}
export interface AssigneeContact {
  Email: string | undefined;
  FirstName: string | undefined;
  LastName: string | undefined;
  BusinessTitle: string | undefined;
}
export interface AssignOpportunityRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
  Assignee: AssigneeContact | undefined;
}
export declare const RelatedEntityType: {
  readonly AWS_MARKETPLACE_OFFERS: "AwsMarketplaceOffers";
  readonly AWS_PRODUCTS: "AwsProducts";
  readonly SOLUTIONS: "Solutions";
};
export type RelatedEntityType =
  (typeof RelatedEntityType)[keyof typeof RelatedEntityType];
export interface AssociateOpportunityRequest {
  Catalog: string | undefined;
  OpportunityIdentifier: string | undefined;
  RelatedEntityType: RelatedEntityType | undefined;
  RelatedEntityIdentifier: string | undefined;
}
export declare const AwsClosedLostReason: {
  readonly ADMINISTRATIVE: "Administrative";
  readonly BUSINESS_ASSOCIATE_AGREEMENT: "Business Associate Agreement";
  readonly COMPANY_ACQUIRED_DISSOLVED: "Company Acquired/Dissolved";
  readonly COMPETITIVE_OFFERING: "Competitive Offering";
  readonly CUSTOMER_DATA_REQUIREMENT: "Customer Data Requirement";
  readonly CUSTOMER_DEFICIENCY: "Customer Deficiency";
  readonly CUSTOMER_EXPERIENCE: "Customer Experience";
  readonly DELAY_CANCELLATION_OF_PROJECT: "Delay / Cancellation of Project";
  readonly DUPLICATE: "Duplicate";
  readonly DUPLICATE_OPPORTUNITY: "Duplicate Opportunity";
  readonly EXECUTIVE_BLOCKER: "Executive Blocker";
  readonly FAILED_VETTING: "Failed Vetting";
  readonly FEATURE_LIMITATION: "Feature Limitation";
  readonly FINANCIAL_COMMERCIAL: "Financial/Commercial";
  readonly INSUFFICIENT_AMAZON_VALUE: "Insufficient Amazon Value";
  readonly INSUFFICIENT_AWS_VALUE: "Insufficient AWS Value";
  readonly INTERNATIONAL_CONSTRAINTS: "International Constraints";
  readonly LEGAL_TAX_REGULATORY: "Legal / Tax / Regulatory";
  readonly LEGAL_TERMS_AND_CONDITIONS: "Legal Terms and Conditions";
  readonly LOST_TO_COMPETITOR: "Lost to Competitor";
  readonly LOST_TO_COMPETITOR_GOOGLE: "Lost to Competitor - Google";
  readonly LOST_TO_COMPETITOR_MICROSOFT: "Lost to Competitor - Microsoft";
  readonly LOST_TO_COMPETITOR_OTHER: "Lost to Competitor - Other";
  readonly LOST_TO_COMPETITOR_RACKSPACE: "Lost to Competitor - Rackspace";
  readonly LOST_TO_COMPETITOR_SOFTLAYER: "Lost to Competitor - SoftLayer";
  readonly LOST_TO_COMPETITOR_VMWARE: "Lost to Competitor - VMWare";
  readonly NOT_COMMITTED_TO_AWS: "Not Committed to AWS";
  readonly NO_CUSTOMER_REFERENCE: "No Customer Reference";
  readonly NO_INTEGRATION_RESOURCES: "No Integration Resources";
  readonly NO_OPPORTUNITY: "No Opportunity";
  readonly NO_PERCEIVED_VALUE_OF_MP: "No Perceived Value of MP";
  readonly NO_RESPONSE: "No Response";
  readonly NO_UPDATE: "No Update";
  readonly ON_PREMISES_DEPLOYMENT: "On Premises Deployment";
  readonly OTHER: "Other";
  readonly OTHER_DETAILS_IN_DESCRIPTION: "Other (Details in Description)";
  readonly PARTNER_GAP: "Partner Gap";
  readonly PAST_DUE: "Past Due";
  readonly PEOPLE_RELATIONSHIP_GOVERNANCE: "People/Relationship/Governance";
  readonly PLATFORM_TECHNOLOGY_LIMITATION: "Platform Technology Limitation";
  readonly PREFERENCE_FOR_COMPETITOR: "Preference for Competitor";
  readonly PRICE: "Price";
  readonly PRODUCT_NOT_ON_AWS: "Product Not on AWS";
  readonly PRODUCT_TECHNOLOGY: "Product/Technology";
  readonly SECURITY_COMPLIANCE: "Security / Compliance";
  readonly SELF_SERVICE: "Self-Service";
  readonly TECHNICAL_LIMITATIONS: "Technical Limitations";
  readonly TERM_SHEET_IMPASSE: "Term Sheet Impasse";
};
export type AwsClosedLostReason =
  (typeof AwsClosedLostReason)[keyof typeof AwsClosedLostReason];
export declare const AwsFundingUsed: {
  readonly NO: "No";
  readonly YES: "Yes";
};
export type AwsFundingUsed =
  (typeof AwsFundingUsed)[keyof typeof AwsFundingUsed];
export declare const AwsMemberBusinessTitle: {
  readonly AWS_ACCOUNT_OWNER: "AWSAccountOwner";
  readonly AWS_SALES_REP: "AWSSalesRep";
  readonly ISVSM: "ISVSM";
  readonly PDM: "PDM";
  readonly PSM: "PSM";
  readonly WWPSPDM: "WWPSPDM";
};
export type AwsMemberBusinessTitle =
  (typeof AwsMemberBusinessTitle)[keyof typeof AwsMemberBusinessTitle];
export interface Contact {
  Email?: string | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  BusinessTitle?: string | undefined;
  Phone?: string | undefined;
}
export interface AwsOpportunityCustomer {
  Contacts?: Contact[] | undefined;
}
export declare const EngagementScore: {
  readonly HIGH: "High";
  readonly LOW: "Low";
  readonly MEDIUM: "Medium";
};
export type EngagementScore =
  (typeof EngagementScore)[keyof typeof EngagementScore];
export interface AwsOpportunityInsights {
  NextBestActions?: string | undefined;
  EngagementScore?: EngagementScore | undefined;
}
export interface ProfileNextStepsHistory {
  Value: string | undefined;
  Time: Date | undefined;
}
export declare const AwsOpportunityStage: {
  readonly BUILDING_INTEGRATION: "Building Integration";
  readonly BUSINESS_VALIDATION: "Business Validation";
  readonly CLOSED_INCOMPLETE: "Closed Incomplete";
  readonly CLOSED_LOST: "Closed Lost";
  readonly COMMITTED: "Committed";
  readonly COMPLETED: "Completed";
  readonly CONTRACT_NEGOTIATION: "Contract Negotiation";
  readonly DEFERRED_TO_PARTNER: "Deferred to Partner";
  readonly ENGAGED: "Engaged";
  readonly EVALUATING: "Evaluating";
  readonly IDENTIFIED: "Identified";
  readonly IN_PROGRESS: "In Progress";
  readonly LAUNCHED: "Launched";
  readonly NOT_STARTED: "Not Started";
  readonly ONBOARDING: "Onboarding";
  readonly ON_HOLD: "On-hold";
  readonly PROSPECT: "Prospect";
  readonly QUALIFIED: "Qualified";
  readonly QUALIFY: "Qualify";
  readonly RESEARCH: "Research";
  readonly SELLER_ENGAGED: "Seller Engaged";
  readonly SELLER_REGISTERED: "Seller Registered";
  readonly TECHNICAL_VALIDATION: "Technical Validation";
  readonly TERM_SHEET_NEGOTIATION: "Term Sheet Negotiation";
};
export type AwsOpportunityStage =
  (typeof AwsOpportunityStage)[keyof typeof AwsOpportunityStage];
export interface AwsOpportunityLifeCycle {
  TargetCloseDate?: string | undefined;
  ClosedLostReason?: AwsClosedLostReason | undefined;
  Stage?: AwsOpportunityStage | undefined;
  NextSteps?: string | undefined;
  NextStepsHistory?: ProfileNextStepsHistory[] | undefined;
}
export declare const CurrencyCode: {
  readonly AED: "AED";
  readonly AFN: "AFN";
  readonly ALL: "ALL";
  readonly AMD: "AMD";
  readonly ANG: "ANG";
  readonly AOA: "AOA";
  readonly ARS: "ARS";
  readonly AUD: "AUD";
  readonly AWG: "AWG";
  readonly AZN: "AZN";
  readonly BAM: "BAM";
  readonly BBD: "BBD";
  readonly BDT: "BDT";
  readonly BGN: "BGN";
  readonly BHD: "BHD";
  readonly BIF: "BIF";
  readonly BMD: "BMD";
  readonly BND: "BND";
  readonly BOB: "BOB";
  readonly BOV: "BOV";
  readonly BRL: "BRL";
  readonly BSD: "BSD";
  readonly BTN: "BTN";
  readonly BWP: "BWP";
  readonly BYN: "BYN";
  readonly BZD: "BZD";
  readonly CAD: "CAD";
  readonly CDF: "CDF";
  readonly CHE: "CHE";
  readonly CHF: "CHF";
  readonly CHW: "CHW";
  readonly CLF: "CLF";
  readonly CLP: "CLP";
  readonly CNY: "CNY";
  readonly COP: "COP";
  readonly COU: "COU";
  readonly CRC: "CRC";
  readonly CUC: "CUC";
  readonly CUP: "CUP";
  readonly CVE: "CVE";
  readonly CZK: "CZK";
  readonly DJF: "DJF";
  readonly DKK: "DKK";
  readonly DOP: "DOP";
  readonly DZD: "DZD";
  readonly EGP: "EGP";
  readonly ERN: "ERN";
  readonly ETB: "ETB";
  readonly EUR: "EUR";
  readonly FJD: "FJD";
  readonly FKP: "FKP";
  readonly GBP: "GBP";
  readonly GEL: "GEL";
  readonly GHS: "GHS";
  readonly GIP: "GIP";
  readonly GMD: "GMD";
  readonly GNF: "GNF";
  readonly GTQ: "GTQ";
  readonly GYD: "GYD";
  readonly HKD: "HKD";
  readonly HNL: "HNL";
  readonly HRK: "HRK";
  readonly HTG: "HTG";
  readonly HUF: "HUF";
  readonly IDR: "IDR";
  readonly ILS: "ILS";
  readonly INR: "INR";
  readonly IQD: "IQD";
  readonly IRR: "IRR";
  readonly ISK: "ISK";
  readonly JMD: "JMD";
  readonly JOD: "JOD";
  readonly JPY: "JPY";
  readonly KES: "KES";
  readonly KGS: "KGS";
  readonly KHR: "KHR";
  readonly KMF: "KMF";
  readonly KPW: "KPW";
  readonly KRW: "KRW";
  readonly KWD: "KWD";
  readonly KYD: "KYD";
  readonly KZT: "KZT";
  readonly LAK: "LAK";
  readonly LBP: "LBP";
  readonly LKR: "LKR";
  readonly LRD: "LRD";
  readonly LSL: "LSL";
  readonly LYD: "LYD";
  readonly MAD: "MAD";
  readonly MDL: "MDL";
  readonly MGA: "MGA";
  readonly MKD: "MKD";
  readonly MMK: "MMK";
  readonly MNT: "MNT";
  readonly MOP: "MOP";
  readonly MRU: "MRU";
  readonly MUR: "MUR";
  readonly MVR: "MVR";
  readonly MWK: "MWK";
  readonly MXN: "MXN";
  readonly MXV: "MXV";
  readonly MYR: "MYR";
  readonly MZN: "MZN";
  readonly NAD: "NAD";
  readonly NGN: "NGN";
  readonly NIO: "NIO";
  readonly NOK: "NOK";
  readonly NPR: "NPR";
  readonly NZD: "NZD";
  readonly OMR: "OMR";
  readonly PAB: "PAB";
  readonly PEN: "PEN";
  readonly PGK: "PGK";
  readonly PHP: "PHP";
  readonly PKR: "PKR";
  readonly PLN: "PLN";
  readonly PYG: "PYG";
  readonly QAR: "QAR";
  readonly RON: "RON";
  readonly RSD: "RSD";
  readonly RUB: "RUB";
  readonly RWF: "RWF";
  readonly SAR: "SAR";
  readonly SBD: "SBD";
  readonly SCR: "SCR";
  readonly SDG: "SDG";
  readonly SEK: "SEK";
  readonly SGD: "SGD";
  readonly SHP: "SHP";
  readonly SLL: "SLL";
  readonly SOS: "SOS";
  readonly SRD: "SRD";
  readonly SSP: "SSP";
  readonly STN: "STN";
  readonly SVC: "SVC";
  readonly SYP: "SYP";
  readonly SZL: "SZL";
  readonly THB: "THB";
  readonly TJS: "TJS";
  readonly TMT: "TMT";
  readonly TND: "TND";
  readonly TOP: "TOP";
  readonly TRY: "TRY";
  readonly TTD: "TTD";
  readonly TWD: "TWD";
  readonly TZS: "TZS";
  readonly UAH: "UAH";
  readonly UGX: "UGX";
  readonly USD: "USD";
  readonly USN: "USN";
  readonly UYI: "UYI";
  readonly UYU: "UYU";
  readonly UZS: "UZS";
  readonly VEF: "VEF";
  readonly VND: "VND";
  readonly VUV: "VUV";
  readonly WST: "WST";
  readonly XAF: "XAF";
  readonly XCD: "XCD";
  readonly XDR: "XDR";
  readonly XOF: "XOF";
  readonly XPF: "XPF";
  readonly XSU: "XSU";
  readonly XUA: "XUA";
  readonly YER: "YER";
  readonly ZAR: "ZAR";
  readonly ZMW: "ZMW";
  readonly ZWL: "ZWL";
};
export type CurrencyCode = (typeof CurrencyCode)[keyof typeof CurrencyCode];
export declare const PaymentFrequency: {
  readonly MONTHLY: "Monthly";
};
export type PaymentFrequency =
  (typeof PaymentFrequency)[keyof typeof PaymentFrequency];
export interface ExpectedCustomerSpend {
  Amount: string | undefined;
  CurrencyCode: CurrencyCode | undefined;
  Frequency: PaymentFrequency | undefined;
  TargetCompany: string | undefined;
  EstimationUrl?: string | undefined;
}
export interface AwsOpportunityProject {
  ExpectedCustomerSpend?: ExpectedCustomerSpend[] | undefined;
}
export interface AwsOpportunityRelatedEntities {
  AwsProducts?: string[] | undefined;
  Solutions?: string[] | undefined;
}
export interface AwsTeamMember {
  Email?: string | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  BusinessTitle?: AwsMemberBusinessTitle | undefined;
}
export interface EngagementCustomer {
  Industry: Industry | undefined;
  CompanyName: string | undefined;
  WebsiteUrl: string | undefined;
  CountryCode: CountryCode | undefined;
}
export interface EngagementCustomerProjectDetails {
  Title: string | undefined;
  BusinessProblem: string | undefined;
  TargetCompletionDate: string | undefined;
}
export interface CustomerProjectsContext {
  Customer?: EngagementCustomer | undefined;
  Project?: EngagementCustomerProjectDetails | undefined;
}
export type EngagementContextPayload =
  | EngagementContextPayload.CustomerProjectMember
  | EngagementContextPayload.$UnknownMember;
export declare namespace EngagementContextPayload {
  interface CustomerProjectMember {
    CustomerProject: CustomerProjectsContext;
    $unknown?: never;
  }
  interface $UnknownMember {
    CustomerProject?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    CustomerProject: (value: CustomerProjectsContext) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EngagementContextPayload, visitor: Visitor<T>) => T;
}
export declare const EngagementContextType: {
  readonly CUSTOMER_PROJECT: "CustomerProject";
};
export type EngagementContextType =
  (typeof EngagementContextType)[keyof typeof EngagementContextType];
export interface EngagementContextDetails {
  Type: EngagementContextType | undefined;
  Payload?: EngagementContextPayload | undefined;
}
export interface CreateEngagementRequest {
  Catalog: string | undefined;
  ClientToken?: string | undefined;
  Title: string | undefined;
  Description: string | undefined;
  Contexts?: EngagementContextDetails[] | undefined;
}
export interface CreateEngagementResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export interface GetEngagementRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
}
export interface GetEngagementResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
  Title?: string | undefined;
  Description?: string | undefined;
  CreatedAt?: Date | undefined;
  CreatedBy?: string | undefined;
  MemberCount?: number | undefined;
  Contexts?: EngagementContextDetails[] | undefined;
}
export interface ListEngagementMembersRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface EngagementMember {
  CompanyName?: string | undefined;
  WebsiteUrl?: string | undefined;
  AccountId?: string | undefined;
}
export interface ListEngagementMembersResponse {
  EngagementMemberList: EngagementMember[] | undefined;
  NextToken?: string | undefined;
}
export declare const EngagementSortName: {
  readonly CreatedDate: "CreatedDate";
};
export type EngagementSortName =
  (typeof EngagementSortName)[keyof typeof EngagementSortName];
export declare const SortOrder: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface EngagementSort {
  SortOrder: SortOrder | undefined;
  SortBy: EngagementSortName | undefined;
}
export interface ListEngagementsRequest {
  Catalog: string | undefined;
  CreatedBy?: string[] | undefined;
  ExcludeCreatedBy?: string[] | undefined;
  Sort?: EngagementSort | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  EngagementIdentifier?: string[] | undefined;
}
export interface EngagementSummary {
  Arn?: string | undefined;
  Id?: string | undefined;
  Title?: string | undefined;
  CreatedAt?: Date | undefined;
  CreatedBy?: string | undefined;
  MemberCount?: number | undefined;
}
export interface ListEngagementsResponse {
  EngagementSummaryList: EngagementSummary[] | undefined;
  NextToken?: string | undefined;
}
export declare const ListTasksSortName: {
  readonly START_TIME: "StartTime";
};
export type ListTasksSortName =
  (typeof ListTasksSortName)[keyof typeof ListTasksSortName];
export interface ListTasksSortBase {
  SortOrder: SortOrder | undefined;
  SortBy: ListTasksSortName | undefined;
}
export declare const TaskStatus: {
  readonly COMPLETE: "COMPLETE";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus];
export interface ListEngagementByAcceptingInvitationTasksRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: ListTasksSortBase | undefined;
  Catalog: string | undefined;
  TaskStatus?: TaskStatus[] | undefined;
  OpportunityIdentifier?: string[] | undefined;
  EngagementInvitationIdentifier?: string[] | undefined;
  TaskIdentifier?: string[] | undefined;
}
export declare const ReasonCode: {
  readonly ENGAGEMENT_ACCESS_DENIED: "EngagementAccessDenied";
  readonly ENGAGEMENT_CONFLICT: "EngagementConflict";
  readonly ENGAGEMENT_INVITATION_CONFLICT: "EngagementInvitationConflict";
  readonly ENGAGEMENT_VALIDATION_FAILED: "EngagementValidationFailed";
  readonly INTERNAL_ERROR: "InternalError";
  readonly INVITATION_ACCESS_DENIED: "InvitationAccessDenied";
  readonly INVITATION_VALIDATION_FAILED: "InvitationValidationFailed";
  readonly OPPORTUNITY_ACCESS_DENIED: "OpportunityAccessDenied";
  readonly OPPORTUNITY_CONFLICT: "OpportunityConflict";
  readonly OPPORTUNITY_SUBMISSION_FAILED: "OpportunitySubmissionFailed";
  readonly OPPORTUNITY_VALIDATION_FAILED: "OpportunityValidationFailed";
  readonly REQUEST_THROTTLED: "RequestThrottled";
  readonly RESOURCE_SNAPSHOT_ACCESS_DENIED: "ResourceSnapshotAccessDenied";
  readonly RESOURCE_SNAPSHOT_CONFLICT: "ResourceSnapshotConflict";
  readonly RESOURCE_SNAPSHOT_JOB_ACCESS_DENIED: "ResourceSnapshotJobAccessDenied";
  readonly RESOURCE_SNAPSHOT_JOB_CONFLICT: "ResourceSnapshotJobConflict";
  readonly RESOURCE_SNAPSHOT_JOB_VALIDATION_FAILED: "ResourceSnapshotJobValidationFailed";
  readonly RESOURCE_SNAPSHOT_VALIDATION_FAILED: "ResourceSnapshotValidationFailed";
  readonly SERVICE_QUOTA_EXCEEDED: "ServiceQuotaExceeded";
};
export type ReasonCode = (typeof ReasonCode)[keyof typeof ReasonCode];
export interface ListEngagementByAcceptingInvitationTaskSummary {
  TaskId?: string | undefined;
  TaskArn?: string | undefined;
  StartTime?: Date | undefined;
  TaskStatus?: TaskStatus | undefined;
  Message?: string | undefined;
  ReasonCode?: ReasonCode | undefined;
  OpportunityId?: string | undefined;
  ResourceSnapshotJobId?: string | undefined;
  EngagementInvitationId?: string | undefined;
}
export interface ListEngagementByAcceptingInvitationTasksResponse {
  TaskSummaries?: ListEngagementByAcceptingInvitationTaskSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface StartEngagementByAcceptingInvitationTaskRequest {
  Catalog: string | undefined;
  ClientToken?: string | undefined;
  Identifier: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface StartEngagementByAcceptingInvitationTaskResponse {
  TaskId?: string | undefined;
  TaskArn?: string | undefined;
  StartTime?: Date | undefined;
  TaskStatus?: TaskStatus | undefined;
  Message?: string | undefined;
  ReasonCode?: ReasonCode | undefined;
  OpportunityId?: string | undefined;
  ResourceSnapshotJobId?: string | undefined;
  EngagementInvitationId?: string | undefined;
}
export interface ListEngagementFromOpportunityTasksRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: ListTasksSortBase | undefined;
  Catalog: string | undefined;
  TaskStatus?: TaskStatus[] | undefined;
  TaskIdentifier?: string[] | undefined;
  OpportunityIdentifier?: string[] | undefined;
  EngagementIdentifier?: string[] | undefined;
}
export interface ListEngagementFromOpportunityTaskSummary {
  TaskId?: string | undefined;
  TaskArn?: string | undefined;
  StartTime?: Date | undefined;
  TaskStatus?: TaskStatus | undefined;
  Message?: string | undefined;
  ReasonCode?: ReasonCode | undefined;
  OpportunityId?: string | undefined;
  ResourceSnapshotJobId?: string | undefined;
  EngagementId?: string | undefined;
  EngagementInvitationId?: string | undefined;
}
export interface ListEngagementFromOpportunityTasksResponse {
  TaskSummaries?: ListEngagementFromOpportunityTaskSummary[] | undefined;
  NextToken?: string | undefined;
}
export declare const SalesInvolvementType: {
  readonly CO_SELL: "Co-Sell";
  readonly FOR_VISIBILITY_ONLY: "For Visibility Only";
};
export type SalesInvolvementType =
  (typeof SalesInvolvementType)[keyof typeof SalesInvolvementType];
export declare const Visibility: {
  readonly FULL: "Full";
  readonly LIMITED: "Limited";
};
export type Visibility = (typeof Visibility)[keyof typeof Visibility];
export interface AwsSubmission {
  InvolvementType: SalesInvolvementType | undefined;
  Visibility?: Visibility | undefined;
}
export interface StartEngagementFromOpportunityTaskRequest {
  Catalog: string | undefined;
  ClientToken?: string | undefined;
  Identifier: string | undefined;
  AwsSubmission: AwsSubmission | undefined;
  Tags?: Tag[] | undefined;
}
export interface StartEngagementFromOpportunityTaskResponse {
  TaskId?: string | undefined;
  TaskArn?: string | undefined;
  StartTime?: Date | undefined;
  TaskStatus?: TaskStatus | undefined;
  Message?: string | undefined;
  ReasonCode?: ReasonCode | undefined;
  OpportunityId?: string | undefined;
  ResourceSnapshotJobId?: string | undefined;
  EngagementId?: string | undefined;
  EngagementInvitationId?: string | undefined;
}
export interface ProjectDetails {
  BusinessProblem: string | undefined;
  Title: string | undefined;
  TargetCompletionDate: string | undefined;
  ExpectedCustomerSpend: ExpectedCustomerSpend[] | undefined;
}
export declare const ReceiverResponsibility: {
  readonly CO_SELL_FACILITATOR: "Co-Sell Facilitator";
  readonly DISTRIBUTOR: "Distributor";
  readonly FACILITATOR: "Facilitator";
  readonly HARDWARE_PARTNER: "Hardware Partner";
  readonly MANAGED_SERVICE_PROVIDER: "Managed Service Provider";
  readonly RESELLER: "Reseller";
  readonly SERVICES_PARTNER: "Services Partner";
  readonly SOFTWARE_PARTNER: "Software Partner";
  readonly TRAINING_PARTNER: "Training Partner";
};
export type ReceiverResponsibility =
  (typeof ReceiverResponsibility)[keyof typeof ReceiverResponsibility];
export interface SenderContact {
  Email: string | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  BusinessTitle?: string | undefined;
  Phone?: string | undefined;
}
export interface OpportunityInvitationPayload {
  SenderContacts?: SenderContact[] | undefined;
  ReceiverResponsibilities: ReceiverResponsibility[] | undefined;
  Customer: EngagementCustomer | undefined;
  Project: ProjectDetails | undefined;
}
export type Payload =
  | Payload.OpportunityInvitationMember
  | Payload.$UnknownMember;
export declare namespace Payload {
  interface OpportunityInvitationMember {
    OpportunityInvitation: OpportunityInvitationPayload;
    $unknown?: never;
  }
  interface $UnknownMember {
    OpportunityInvitation?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    OpportunityInvitation: (value: OpportunityInvitationPayload) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Payload, visitor: Visitor<T>) => T;
}
export type Receiver = Receiver.AccountMember | Receiver.$UnknownMember;
export declare namespace Receiver {
  interface AccountMember {
    Account: AccountReceiver;
    $unknown?: never;
  }
  interface $UnknownMember {
    Account?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Account: (value: AccountReceiver) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: Receiver, visitor: Visitor<T>) => T;
}
export interface Invitation {
  Message: string | undefined;
  Receiver: Receiver | undefined;
  Payload: Payload | undefined;
}
export interface CreateEngagementInvitationRequest {
  Catalog: string | undefined;
  ClientToken?: string | undefined;
  EngagementIdentifier: string | undefined;
  Invitation: Invitation | undefined;
}
export interface CreateEngagementInvitationResponse {
  Id: string | undefined;
  Arn: string | undefined;
}
export interface GetEngagementInvitationRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
}
export interface EngagementMemberSummary {
  CompanyName?: string | undefined;
  WebsiteUrl?: string | undefined;
}
export declare const EngagementInvitationPayloadType: {
  readonly OPPORTUNITY_INVITATION: "OpportunityInvitation";
};
export type EngagementInvitationPayloadType =
  (typeof EngagementInvitationPayloadType)[keyof typeof EngagementInvitationPayloadType];
export declare const InvitationStatus: {
  readonly ACCEPTED: "ACCEPTED";
  readonly EXPIRED: "EXPIRED";
  readonly PENDING: "PENDING";
  readonly REJECTED: "REJECTED";
};
export type InvitationStatus =
  (typeof InvitationStatus)[keyof typeof InvitationStatus];
export interface GetEngagementInvitationResponse {
  Arn?: string | undefined;
  PayloadType?: EngagementInvitationPayloadType | undefined;
  Id: string | undefined;
  EngagementId?: string | undefined;
  EngagementTitle?: string | undefined;
  Status?: InvitationStatus | undefined;
  InvitationDate?: Date | undefined;
  ExpirationDate?: Date | undefined;
  SenderAwsAccountId?: string | undefined;
  SenderCompanyName?: string | undefined;
  Receiver?: Receiver | undefined;
  Catalog: string | undefined;
  RejectionReason?: string | undefined;
  Payload?: Payload | undefined;
  InvitationMessage?: string | undefined;
  EngagementDescription?: string | undefined;
  ExistingMembers?: EngagementMemberSummary[] | undefined;
}
export declare const ParticipantType: {
  readonly RECEIVER: "RECEIVER";
  readonly SENDER: "SENDER";
};
export type ParticipantType =
  (typeof ParticipantType)[keyof typeof ParticipantType];
export declare const OpportunityEngagementInvitationSortName: {
  readonly INVITATION_DATE: "InvitationDate";
};
export type OpportunityEngagementInvitationSortName =
  (typeof OpportunityEngagementInvitationSortName)[keyof typeof OpportunityEngagementInvitationSortName];
export interface OpportunityEngagementInvitationSort {
  SortOrder: SortOrder | undefined;
  SortBy: OpportunityEngagementInvitationSortName | undefined;
}
export interface ListEngagementInvitationsRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: OpportunityEngagementInvitationSort | undefined;
  PayloadType?: EngagementInvitationPayloadType[] | undefined;
  ParticipantType: ParticipantType | undefined;
  Status?: InvitationStatus[] | undefined;
  EngagementIdentifier?: string[] | undefined;
  SenderAwsAccountId?: string[] | undefined;
}
export interface EngagementInvitationSummary {
  Arn?: string | undefined;
  PayloadType?: EngagementInvitationPayloadType | undefined;
  Id: string | undefined;
  EngagementId?: string | undefined;
  EngagementTitle?: string | undefined;
  Status?: InvitationStatus | undefined;
  InvitationDate?: Date | undefined;
  ExpirationDate?: Date | undefined;
  SenderAwsAccountId?: string | undefined;
  SenderCompanyName?: string | undefined;
  Receiver?: Receiver | undefined;
  Catalog: string | undefined;
  ParticipantType?: ParticipantType | undefined;
}
export interface ListEngagementInvitationsResponse {
  EngagementInvitationSummaries?: EngagementInvitationSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface RejectEngagementInvitationRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
  RejectionReason?: string | undefined;
}
export interface GetSellingSystemSettingsRequest {
  Catalog: string | undefined;
}
export interface GetSellingSystemSettingsResponse {
  Catalog: string | undefined;
  ResourceSnapshotJobRoleArn?: string | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags: Tag[] | undefined;
}
export interface Customer {
  Account?: Account | undefined;
  Contacts?: Contact[] | undefined;
}
export declare const ClosedLostReason: {
  readonly CUSTOMER_DEFICIENCY: "Customer Deficiency";
  readonly CUSTOMER_EXPERIENCE: "Customer Experience";
  readonly DELAY_CANCELLATION_OF_PROJECT: "Delay / Cancellation of Project";
  readonly FINANCIALCOMMERCIAL: "Financial/Commercial";
  readonly LEGAL_TAX_REGULATORY: "Legal / Tax / Regulatory";
  readonly LOST_TO_COMPETITOR_GOOGLE: "Lost to Competitor - Google";
  readonly LOST_TO_COMPETITOR_MICROSOFT: "Lost to Competitor - Microsoft";
  readonly LOST_TO_COMPETITOR_OTHER: "Lost to Competitor - Other";
  readonly LOST_TO_COMPETITOR_SOFTLAYER: "Lost to Competitor - SoftLayer";
  readonly LOST_TO_COMPETITOR_VMWARE: "Lost to Competitor - VMWare";
  readonly NO_OPPORTUNITY: "No Opportunity";
  readonly ON_PREMISES_DEPLOYMENT: "On Premises Deployment";
  readonly OTHER: "Other";
  readonly PARTNER_GAP: "Partner Gap";
  readonly PEOPLERELATIONSHIPGOVERNANCE: "People/Relationship/Governance";
  readonly PRICE: "Price";
  readonly PRODUCTTECHNOLOGY: "Product/Technology";
  readonly SECURITY_COMPLIANCE: "Security / Compliance";
  readonly TECHNICAL_LIMITATIONS: "Technical Limitations";
};
export type ClosedLostReason =
  (typeof ClosedLostReason)[keyof typeof ClosedLostReason];
export interface NextStepsHistory {
  Value: string | undefined;
  Time: Date | undefined;
}
export declare const ReviewStatus: {
  readonly ACTION_REQUIRED: "Action Required";
  readonly APPROVED: "Approved";
  readonly IN_REVIEW: "In review";
  readonly PENDING_SUBMISSION: "Pending Submission";
  readonly REJECTED: "Rejected";
  readonly SUBMITTED: "Submitted";
};
export type ReviewStatus = (typeof ReviewStatus)[keyof typeof ReviewStatus];
export declare const Stage: {
  readonly BUSINESS_VALIDATION: "Business Validation";
  readonly CLOSED_LOST: "Closed Lost";
  readonly COMMITTED: "Committed";
  readonly LAUNCHED: "Launched";
  readonly PROSPECT: "Prospect";
  readonly QUALIFIED: "Qualified";
  readonly TECHNICAL_VALIDATION: "Technical Validation";
};
export type Stage = (typeof Stage)[keyof typeof Stage];
export interface LifeCycle {
  Stage?: Stage | undefined;
  ClosedLostReason?: ClosedLostReason | undefined;
  NextSteps?: string | undefined;
  TargetCloseDate?: string | undefined;
  ReviewStatus?: ReviewStatus | undefined;
  ReviewComments?: string | undefined;
  ReviewStatusReason?: string | undefined;
  NextStepsHistory?: NextStepsHistory[] | undefined;
}
export declare const Channel: {
  readonly AWS_MARKETING_CENTRAL: "AWS Marketing Central";
  readonly CONTENT_SYNDICATION: "Content Syndication";
  readonly DISPLAY: "Display";
  readonly EMAIL: "Email";
  readonly LIVE_EVENT: "Live Event";
  readonly OUT_OF_HOME: "Out Of Home (OOH)";
  readonly PRINT: "Print";
  readonly SEARCH: "Search";
  readonly SOCIAL: "Social";
  readonly TELEMARKETING: "Telemarketing";
  readonly TV: "TV";
  readonly VIDEO: "Video";
  readonly VIRTUAL_EVENT: "Virtual Event";
};
export type Channel = (typeof Channel)[keyof typeof Channel];
export declare const MarketingSource: {
  readonly MARKETING_ACTIVITY: "Marketing Activity";
  readonly NONE: "None";
};
export type MarketingSource =
  (typeof MarketingSource)[keyof typeof MarketingSource];
export interface Marketing {
  CampaignName?: string | undefined;
  Source?: MarketingSource | undefined;
  UseCases?: string[] | undefined;
  Channels?: Channel[] | undefined;
  AwsFundingUsed?: AwsFundingUsed | undefined;
}
export declare const NationalSecurity: {
  readonly NO: "No";
  readonly YES: "Yes";
};
export type NationalSecurity =
  (typeof NationalSecurity)[keyof typeof NationalSecurity];
export declare const OpportunityType: {
  readonly EXPANSION: "Expansion";
  readonly FLAT_RENEWAL: "Flat Renewal";
  readonly NET_NEW_BUSINESS: "Net New Business";
};
export type OpportunityType =
  (typeof OpportunityType)[keyof typeof OpportunityType];
export declare const OpportunityOrigin: {
  readonly AWS_REFERRAL: "AWS Referral";
  readonly PARTNER_REFERRAL: "Partner Referral";
};
export type OpportunityOrigin =
  (typeof OpportunityOrigin)[keyof typeof OpportunityOrigin];
export declare const PrimaryNeedFromAws: {
  readonly CO_SELL_ARCHITECTURAL_VALIDATION: "Co-Sell - Architectural Validation";
  readonly CO_SELL_BUSINESS_PRESENTATION: "Co-Sell - Business Presentation";
  readonly CO_SELL_COMPETITIVE_INFORMATION: "Co-Sell - Competitive Information";
  readonly CO_SELL_DEAL_SUPPORT: "Co-Sell - Deal Support";
  readonly CO_SELL_PRICING_ASSISTANCE: "Co-Sell - Pricing Assistance";
  readonly CO_SELL_SUPPORT_FOR_PUBLIC_TENDER_RFX: "Co-Sell - Support for Public Tender / RFx";
  readonly CO_SELL_TECHNICAL_CONSULTATION: "Co-Sell - Technical Consultation";
  readonly CO_SELL_TOTAL_COST_OF_OWNERSHIP_EVALUATION: "Co-Sell - Total Cost of Ownership Evaluation";
};
export type PrimaryNeedFromAws =
  (typeof PrimaryNeedFromAws)[keyof typeof PrimaryNeedFromAws];
export declare const CompetitorName: {
  readonly AKAMAI: "Akamai";
  readonly ALICLOUD: "AliCloud";
  readonly CO_LOCATION: "Co-location";
  readonly GOOGLE_CLOUD_PLATFORM: "Google Cloud Platform";
  readonly IBM_SOFTLAYER: "IBM Softlayer";
  readonly MICROSOFT_AZURE: "Microsoft Azure";
  readonly NO_COMPETITION: "No Competition";
  readonly ON_PREM: "On-Prem";
  readonly ORACLE_CLOUD: "Oracle Cloud";
  readonly OTHER: "*Other";
  readonly OTHER_COST_OPTIMIZATION: "Other- Cost Optimization";
};
export type CompetitorName =
  (typeof CompetitorName)[keyof typeof CompetitorName];
export declare const DeliveryModel: {
  readonly BYOL_OR_AMI: "BYOL or AMI";
  readonly MANAGED_SERVICES: "Managed Services";
  readonly OTHER: "Other";
  readonly PROFESSIONAL_SERVICES: "Professional Services";
  readonly RESELL: "Resell";
  readonly SAAS_OR_PAAS: "SaaS or PaaS";
};
export type DeliveryModel = (typeof DeliveryModel)[keyof typeof DeliveryModel];
export declare const SalesActivity: {
  readonly AGREED_ON_SOLUTION_TO_BUSINESS_PROBLEM: "Agreed on solution to Business Problem";
  readonly COMPLETED_ACTION_PLAN: "Completed Action Plan";
  readonly CONDUCTED_POC_DEMO: "Conducted POC / Demo";
  readonly CUSTOMER_HAS_SHOWN_INTEREST: "Customer has shown interest in solution";
  readonly FINALIZED_DEPLOYMENT_NEEDS: "Finalized Deployment Need";
  readonly INITIALIZED_DISCUSSIONS_WITH_CUSTOMER: "Initialized discussions with customer";
  readonly IN_EVALUATION_PLANNING_STAGE: "In evaluation / planning stage";
  readonly SOW_SIGNED: "SOW Signed";
};
export type SalesActivity = (typeof SalesActivity)[keyof typeof SalesActivity];
export interface Project {
  DeliveryModels?: DeliveryModel[] | undefined;
  ExpectedCustomerSpend?: ExpectedCustomerSpend[] | undefined;
  Title?: string | undefined;
  ApnPrograms?: string[] | undefined;
  CustomerBusinessProblem?: string | undefined;
  CustomerUseCase?: string | undefined;
  RelatedOpportunityIdentifier?: string | undefined;
  SalesActivities?: SalesActivity[] | undefined;
  CompetitorName?: CompetitorName | undefined;
  OtherCompetitorNames?: string | undefined;
  OtherSolutionDescription?: string | undefined;
  AdditionalComments?: string | undefined;
}
export declare const RevenueModel: {
  readonly CONTRACT: "Contract";
  readonly PAY_AS_YOU_GO: "Pay-as-you-go";
  readonly SUBSCRIPTION: "Subscription";
};
export type RevenueModel = (typeof RevenueModel)[keyof typeof RevenueModel];
export interface MonetaryValue {
  Amount: string | undefined;
  CurrencyCode: CurrencyCode | undefined;
}
export interface SoftwareRevenue {
  DeliveryModel?: RevenueModel | undefined;
  Value?: MonetaryValue | undefined;
  EffectiveDate?: string | undefined;
  ExpirationDate?: string | undefined;
}
export interface CreateOpportunityRequest {
  Catalog: string | undefined;
  PrimaryNeedsFromAws?: PrimaryNeedFromAws[] | undefined;
  NationalSecurity?: NationalSecurity | undefined;
  PartnerOpportunityIdentifier?: string | undefined;
  Customer?: Customer | undefined;
  Project?: Project | undefined;
  OpportunityType?: OpportunityType | undefined;
  Marketing?: Marketing | undefined;
  SoftwareRevenue?: SoftwareRevenue | undefined;
  ClientToken?: string | undefined;
  LifeCycle?: LifeCycle | undefined;
  Origin?: OpportunityOrigin | undefined;
  OpportunityTeam?: Contact[] | undefined;
}
export interface CreateOpportunityResponse {
  Id: string | undefined;
  PartnerOpportunityIdentifier?: string | undefined;
  LastModifiedDate?: Date | undefined;
}
export interface DisassociateOpportunityRequest {
  Catalog: string | undefined;
  OpportunityIdentifier: string | undefined;
  RelatedEntityType: RelatedEntityType | undefined;
  RelatedEntityIdentifier: string | undefined;
}
export interface GetAwsOpportunitySummaryRequest {
  Catalog: string | undefined;
  RelatedOpportunityIdentifier: string | undefined;
}
export declare const InvolvementTypeChangeReason: {
  readonly CHANGE_IN_DEAL_INFORMATION: "Change in Deal Information";
  readonly CUSTOMER_REQUESTED: "Customer Requested";
  readonly EXPANSION_OPPORTUNITY: "Expansion Opportunity";
  readonly RISK_MITIGATION: "Risk Mitigation";
  readonly TECHNICAL_COMPLEXITY: "Technical Complexity";
};
export type InvolvementTypeChangeReason =
  (typeof InvolvementTypeChangeReason)[keyof typeof InvolvementTypeChangeReason];
export interface GetAwsOpportunitySummaryResponse {
  Catalog: string | undefined;
  RelatedOpportunityId?: string | undefined;
  Origin?: OpportunityOrigin | undefined;
  InvolvementType?: SalesInvolvementType | undefined;
  Visibility?: Visibility | undefined;
  LifeCycle?: AwsOpportunityLifeCycle | undefined;
  OpportunityTeam?: AwsTeamMember[] | undefined;
  Insights?: AwsOpportunityInsights | undefined;
  InvolvementTypeChangeReason?: InvolvementTypeChangeReason | undefined;
  RelatedEntityIds?: AwsOpportunityRelatedEntities | undefined;
  Customer?: AwsOpportunityCustomer | undefined;
  Project?: AwsOpportunityProject | undefined;
}
export interface GetOpportunityRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
}
export interface RelatedEntityIdentifiers {
  AwsMarketplaceOffers?: string[] | undefined;
  Solutions?: string[] | undefined;
  AwsProducts?: string[] | undefined;
}
export interface GetOpportunityResponse {
  Catalog: string | undefined;
  PrimaryNeedsFromAws?: PrimaryNeedFromAws[] | undefined;
  NationalSecurity?: NationalSecurity | undefined;
  PartnerOpportunityIdentifier?: string | undefined;
  Customer?: Customer | undefined;
  Project?: Project | undefined;
  OpportunityType?: OpportunityType | undefined;
  Marketing?: Marketing | undefined;
  SoftwareRevenue?: SoftwareRevenue | undefined;
  Id: string | undefined;
  Arn?: string | undefined;
  LastModifiedDate: Date | undefined;
  CreatedDate: Date | undefined;
  RelatedEntityIdentifiers: RelatedEntityIdentifiers | undefined;
  LifeCycle?: LifeCycle | undefined;
  OpportunityTeam?: Contact[] | undefined;
}
export interface LastModifiedDate {
  AfterLastModifiedDate?: Date | undefined;
  BeforeLastModifiedDate?: Date | undefined;
}
export declare const OpportunitySortName: {
  readonly CUSTOMER_COMPANY_NAME: "CustomerCompanyName";
  readonly IDENTIFIER: "Identifier";
  readonly LAST_MODIFIEDDATE: "LastModifiedDate";
};
export type OpportunitySortName =
  (typeof OpportunitySortName)[keyof typeof OpportunitySortName];
export interface OpportunitySort {
  SortOrder: SortOrder | undefined;
  SortBy: OpportunitySortName | undefined;
}
export interface ListOpportunitiesRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: OpportunitySort | undefined;
  LastModifiedDate?: LastModifiedDate | undefined;
  Identifier?: string[] | undefined;
  LifeCycleStage?: Stage[] | undefined;
  LifeCycleReviewStatus?: ReviewStatus[] | undefined;
  CustomerCompanyName?: string[] | undefined;
}
export interface CustomerSummary {
  Account?: AccountSummary | undefined;
}
export interface LifeCycleSummary {
  Stage?: Stage | undefined;
  ClosedLostReason?: ClosedLostReason | undefined;
  NextSteps?: string | undefined;
  TargetCloseDate?: string | undefined;
  ReviewStatus?: ReviewStatus | undefined;
  ReviewComments?: string | undefined;
  ReviewStatusReason?: string | undefined;
}
export interface ProjectSummary {
  DeliveryModels?: DeliveryModel[] | undefined;
  ExpectedCustomerSpend?: ExpectedCustomerSpend[] | undefined;
}
export interface OpportunitySummary {
  Catalog: string | undefined;
  Id?: string | undefined;
  Arn?: string | undefined;
  PartnerOpportunityIdentifier?: string | undefined;
  OpportunityType?: OpportunityType | undefined;
  LastModifiedDate?: Date | undefined;
  CreatedDate?: Date | undefined;
  LifeCycle?: LifeCycleSummary | undefined;
  Customer?: CustomerSummary | undefined;
  Project?: ProjectSummary | undefined;
}
export interface ListOpportunitiesResponse {
  OpportunitySummaries: OpportunitySummary[] | undefined;
  NextToken?: string | undefined;
}
export interface SubmitOpportunityRequest {
  Catalog: string | undefined;
  Identifier: string | undefined;
  InvolvementType: SalesInvolvementType | undefined;
  Visibility?: Visibility | undefined;
}
export interface UpdateOpportunityRequest {
  Catalog: string | undefined;
  PrimaryNeedsFromAws?: PrimaryNeedFromAws[] | undefined;
  NationalSecurity?: NationalSecurity | undefined;
  PartnerOpportunityIdentifier?: string | undefined;
  Customer?: Customer | undefined;
  Project?: Project | undefined;
  OpportunityType?: OpportunityType | undefined;
  Marketing?: Marketing | undefined;
  SoftwareRevenue?: SoftwareRevenue | undefined;
  LastModifiedDate: Date | undefined;
  Identifier: string | undefined;
  LifeCycle?: LifeCycle | undefined;
}
export interface UpdateOpportunityResponse {
  Id: string | undefined;
  LastModifiedDate: Date | undefined;
}
export interface PutSellingSystemSettingsRequest {
  Catalog: string | undefined;
  ResourceSnapshotJobRoleIdentifier?: string | undefined;
}
export interface PutSellingSystemSettingsResponse {
  Catalog: string | undefined;
  ResourceSnapshotJobRoleArn?: string | undefined;
}
export declare const ResourceType: {
  readonly OPPORTUNITY: "Opportunity";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface CreateResourceSnapshotRequest {
  Catalog: string | undefined;
  EngagementIdentifier: string | undefined;
  ResourceType: ResourceType | undefined;
  ResourceIdentifier: string | undefined;
  ResourceSnapshotTemplateIdentifier: string | undefined;
  ClientToken?: string | undefined;
}
export interface CreateResourceSnapshotResponse {
  Arn?: string | undefined;
  Revision?: number | undefined;
}
export interface GetResourceSnapshotRequest {
  Catalog: string | undefined;
  EngagementIdentifier: string | undefined;
  ResourceType: ResourceType | undefined;
  ResourceIdentifier: string | undefined;
  ResourceSnapshotTemplateIdentifier: string | undefined;
  Revision?: number | undefined;
}
export interface LifeCycleForView {
  TargetCloseDate?: string | undefined;
  ReviewStatus?: ReviewStatus | undefined;
  Stage?: Stage | undefined;
  NextSteps?: string | undefined;
}
export interface ProjectView {
  DeliveryModels?: DeliveryModel[] | undefined;
  ExpectedCustomerSpend?: ExpectedCustomerSpend[] | undefined;
  CustomerUseCase?: string | undefined;
  SalesActivities?: SalesActivity[] | undefined;
  OtherSolutionDescription?: string | undefined;
}
export interface OpportunitySummaryView {
  OpportunityType?: OpportunityType | undefined;
  Lifecycle?: LifeCycleForView | undefined;
  OpportunityTeam?: Contact[] | undefined;
  PrimaryNeedsFromAws?: PrimaryNeedFromAws[] | undefined;
  Customer?: Customer | undefined;
  Project?: ProjectView | undefined;
  RelatedEntityIdentifiers?: RelatedEntityIdentifiers | undefined;
}
export type ResourceSnapshotPayload =
  | ResourceSnapshotPayload.OpportunitySummaryMember
  | ResourceSnapshotPayload.$UnknownMember;
export declare namespace ResourceSnapshotPayload {
  interface OpportunitySummaryMember {
    OpportunitySummary: OpportunitySummaryView;
    $unknown?: never;
  }
  interface $UnknownMember {
    OpportunitySummary?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    OpportunitySummary: (value: OpportunitySummaryView) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ResourceSnapshotPayload, visitor: Visitor<T>) => T;
}
export interface GetResourceSnapshotResponse {
  Catalog: string | undefined;
  Arn?: string | undefined;
  CreatedBy?: string | undefined;
  CreatedAt?: Date | undefined;
  EngagementId?: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceId?: string | undefined;
  ResourceSnapshotTemplateName?: string | undefined;
  Revision?: number | undefined;
  Payload?: ResourceSnapshotPayload | undefined;
}
export interface ListEngagementResourceAssociationsRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  EngagementIdentifier?: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceIdentifier?: string | undefined;
  CreatedBy?: string | undefined;
}
export interface EngagementResourceAssociationSummary {
  Catalog: string | undefined;
  EngagementId?: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceId?: string | undefined;
  CreatedBy?: string | undefined;
}
export interface ListEngagementResourceAssociationsResponse {
  EngagementResourceAssociationSummaries:
    | EngagementResourceAssociationSummary[]
    | undefined;
  NextToken?: string | undefined;
}
export interface ListResourceSnapshotsRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  EngagementIdentifier: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceIdentifier?: string | undefined;
  ResourceSnapshotTemplateIdentifier?: string | undefined;
  CreatedBy?: string | undefined;
}
export interface ResourceSnapshotSummary {
  Arn?: string | undefined;
  Revision?: number | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceId?: string | undefined;
  ResourceSnapshotTemplateName?: string | undefined;
  CreatedBy?: string | undefined;
}
export interface ListResourceSnapshotsResponse {
  ResourceSnapshotSummaries: ResourceSnapshotSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface CreateResourceSnapshotJobRequest {
  Catalog: string | undefined;
  ClientToken?: string | undefined;
  EngagementIdentifier: string | undefined;
  ResourceType: ResourceType | undefined;
  ResourceIdentifier: string | undefined;
  ResourceSnapshotTemplateIdentifier: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateResourceSnapshotJobResponse {
  Id?: string | undefined;
  Arn?: string | undefined;
}
export interface DeleteResourceSnapshotJobRequest {
  Catalog: string | undefined;
  ResourceSnapshotJobIdentifier: string | undefined;
}
export interface GetResourceSnapshotJobRequest {
  Catalog: string | undefined;
  ResourceSnapshotJobIdentifier: string | undefined;
}
export declare const ResourceSnapshotJobStatus: {
  readonly RUNNING: "Running";
  readonly STOPPED: "Stopped";
};
export type ResourceSnapshotJobStatus =
  (typeof ResourceSnapshotJobStatus)[keyof typeof ResourceSnapshotJobStatus];
export interface GetResourceSnapshotJobResponse {
  Catalog: string | undefined;
  Id?: string | undefined;
  Arn?: string | undefined;
  EngagementId?: string | undefined;
  ResourceType?: ResourceType | undefined;
  ResourceId?: string | undefined;
  ResourceArn?: string | undefined;
  ResourceSnapshotTemplateName?: string | undefined;
  CreatedAt?: Date | undefined;
  Status?: ResourceSnapshotJobStatus | undefined;
  LastSuccessfulExecutionDate?: Date | undefined;
  LastFailure?: string | undefined;
}
export declare const SortBy: {
  readonly CREATED_DATE: "CreatedDate";
};
export type SortBy = (typeof SortBy)[keyof typeof SortBy];
export interface SortObject {
  SortBy?: SortBy | undefined;
  SortOrder?: SortOrder | undefined;
}
export interface ListResourceSnapshotJobsRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  EngagementIdentifier?: string | undefined;
  Status?: ResourceSnapshotJobStatus | undefined;
  Sort?: SortObject | undefined;
}
export interface ResourceSnapshotJobSummary {
  Id?: string | undefined;
  Arn?: string | undefined;
  EngagementId?: string | undefined;
  Status?: ResourceSnapshotJobStatus | undefined;
}
export interface ListResourceSnapshotJobsResponse {
  ResourceSnapshotJobSummaries: ResourceSnapshotJobSummary[] | undefined;
  NextToken?: string | undefined;
}
export interface StartResourceSnapshotJobRequest {
  Catalog: string | undefined;
  ResourceSnapshotJobIdentifier: string | undefined;
}
export interface StopResourceSnapshotJobRequest {
  Catalog: string | undefined;
  ResourceSnapshotJobIdentifier: string | undefined;
}
export declare const SolutionSortName: {
  readonly CATEGORY: "Category";
  readonly CREATEDDATE: "CreatedDate";
  readonly IDENTIFIER: "Identifier";
  readonly NAME: "Name";
  readonly STATUS: "Status";
};
export type SolutionSortName =
  (typeof SolutionSortName)[keyof typeof SolutionSortName];
export interface SolutionSort {
  SortOrder: SortOrder | undefined;
  SortBy: SolutionSortName | undefined;
}
export declare const SolutionStatus: {
  readonly ACTIVE: "Active";
  readonly DRAFT: "Draft";
  readonly INACTIVE: "Inactive";
};
export type SolutionStatus =
  (typeof SolutionStatus)[keyof typeof SolutionStatus];
export interface ListSolutionsRequest {
  Catalog: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Sort?: SolutionSort | undefined;
  Status?: SolutionStatus[] | undefined;
  Identifier?: string[] | undefined;
  Category?: string[] | undefined;
}
export interface SolutionBase {
  Catalog: string | undefined;
  Id: string | undefined;
  Arn?: string | undefined;
  Name: string | undefined;
  Status: SolutionStatus | undefined;
  Category: string | undefined;
  CreatedDate: Date | undefined;
}
export interface ListSolutionsResponse {
  SolutionSummaries: SolutionBase[] | undefined;
  NextToken?: string | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export declare const AddressFilterSensitiveLog: (obj: Address) => any;
export declare const AccountFilterSensitiveLog: (obj: Account) => any;
export declare const AccountReceiverFilterSensitiveLog: (
  obj: AccountReceiver
) => any;
export declare const AddressSummaryFilterSensitiveLog: (
  obj: AddressSummary
) => any;
export declare const AccountSummaryFilterSensitiveLog: (
  obj: AccountSummary
) => any;
export declare const AssigneeContactFilterSensitiveLog: (
  obj: AssigneeContact
) => any;
export declare const AssignOpportunityRequestFilterSensitiveLog: (
  obj: AssignOpportunityRequest
) => any;
export declare const ContactFilterSensitiveLog: (obj: Contact) => any;
export declare const AwsOpportunityCustomerFilterSensitiveLog: (
  obj: AwsOpportunityCustomer
) => any;
export declare const AwsOpportunityLifeCycleFilterSensitiveLog: (
  obj: AwsOpportunityLifeCycle
) => any;
export declare const ExpectedCustomerSpendFilterSensitiveLog: (
  obj: ExpectedCustomerSpend
) => any;
export declare const AwsOpportunityProjectFilterSensitiveLog: (
  obj: AwsOpportunityProject
) => any;
export declare const AwsTeamMemberFilterSensitiveLog: (
  obj: AwsTeamMember
) => any;
export declare const EngagementCustomerFilterSensitiveLog: (
  obj: EngagementCustomer
) => any;
export declare const EngagementCustomerProjectDetailsFilterSensitiveLog: (
  obj: EngagementCustomerProjectDetails
) => any;
export declare const CustomerProjectsContextFilterSensitiveLog: (
  obj: CustomerProjectsContext
) => any;
export declare const EngagementContextPayloadFilterSensitiveLog: (
  obj: EngagementContextPayload
) => any;
export declare const EngagementContextDetailsFilterSensitiveLog: (
  obj: EngagementContextDetails
) => any;
export declare const CreateEngagementRequestFilterSensitiveLog: (
  obj: CreateEngagementRequest
) => any;
export declare const GetEngagementResponseFilterSensitiveLog: (
  obj: GetEngagementResponse
) => any;
export declare const EngagementMemberFilterSensitiveLog: (
  obj: EngagementMember
) => any;
export declare const ListEngagementMembersResponseFilterSensitiveLog: (
  obj: ListEngagementMembersResponse
) => any;
export declare const ListEngagementsRequestFilterSensitiveLog: (
  obj: ListEngagementsRequest
) => any;
export declare const EngagementSummaryFilterSensitiveLog: (
  obj: EngagementSummary
) => any;
export declare const ListEngagementsResponseFilterSensitiveLog: (
  obj: ListEngagementsResponse
) => any;
export declare const ProjectDetailsFilterSensitiveLog: (
  obj: ProjectDetails
) => any;
export declare const SenderContactFilterSensitiveLog: (
  obj: SenderContact
) => any;
export declare const OpportunityInvitationPayloadFilterSensitiveLog: (
  obj: OpportunityInvitationPayload
) => any;
export declare const PayloadFilterSensitiveLog: (obj: Payload) => any;
export declare const ReceiverFilterSensitiveLog: (obj: Receiver) => any;
export declare const InvitationFilterSensitiveLog: (obj: Invitation) => any;
export declare const CreateEngagementInvitationRequestFilterSensitiveLog: (
  obj: CreateEngagementInvitationRequest
) => any;
export declare const EngagementMemberSummaryFilterSensitiveLog: (
  obj: EngagementMemberSummary
) => any;
export declare const GetEngagementInvitationResponseFilterSensitiveLog: (
  obj: GetEngagementInvitationResponse
) => any;
export declare const ListEngagementInvitationsRequestFilterSensitiveLog: (
  obj: ListEngagementInvitationsRequest
) => any;
export declare const EngagementInvitationSummaryFilterSensitiveLog: (
  obj: EngagementInvitationSummary
) => any;
export declare const ListEngagementInvitationsResponseFilterSensitiveLog: (
  obj: ListEngagementInvitationsResponse
) => any;
export declare const CustomerFilterSensitiveLog: (obj: Customer) => any;
export declare const LifeCycleFilterSensitiveLog: (obj: LifeCycle) => any;
export declare const ProjectFilterSensitiveLog: (obj: Project) => any;
export declare const MonetaryValueFilterSensitiveLog: (
  obj: MonetaryValue
) => any;
export declare const SoftwareRevenueFilterSensitiveLog: (
  obj: SoftwareRevenue
) => any;
export declare const CreateOpportunityRequestFilterSensitiveLog: (
  obj: CreateOpportunityRequest
) => any;
export declare const GetAwsOpportunitySummaryResponseFilterSensitiveLog: (
  obj: GetAwsOpportunitySummaryResponse
) => any;
export declare const GetOpportunityResponseFilterSensitiveLog: (
  obj: GetOpportunityResponse
) => any;
export declare const CustomerSummaryFilterSensitiveLog: (
  obj: CustomerSummary
) => any;
export declare const LifeCycleSummaryFilterSensitiveLog: (
  obj: LifeCycleSummary
) => any;
export declare const ProjectSummaryFilterSensitiveLog: (
  obj: ProjectSummary
) => any;
export declare const OpportunitySummaryFilterSensitiveLog: (
  obj: OpportunitySummary
) => any;
export declare const ListOpportunitiesResponseFilterSensitiveLog: (
  obj: ListOpportunitiesResponse
) => any;
export declare const UpdateOpportunityRequestFilterSensitiveLog: (
  obj: UpdateOpportunityRequest
) => any;
export declare const LifeCycleForViewFilterSensitiveLog: (
  obj: LifeCycleForView
) => any;
export declare const ProjectViewFilterSensitiveLog: (obj: ProjectView) => any;
export declare const OpportunitySummaryViewFilterSensitiveLog: (
  obj: OpportunitySummaryView
) => any;
export declare const ResourceSnapshotPayloadFilterSensitiveLog: (
  obj: ResourceSnapshotPayload
) => any;
export declare const GetResourceSnapshotResponseFilterSensitiveLog: (
  obj: GetResourceSnapshotResponse
) => any;
export declare const ListEngagementResourceAssociationsRequestFilterSensitiveLog: (
  obj: ListEngagementResourceAssociationsRequest
) => any;
export declare const EngagementResourceAssociationSummaryFilterSensitiveLog: (
  obj: EngagementResourceAssociationSummary
) => any;
export declare const ListEngagementResourceAssociationsResponseFilterSensitiveLog: (
  obj: ListEngagementResourceAssociationsResponse
) => any;
export declare const ListResourceSnapshotsRequestFilterSensitiveLog: (
  obj: ListResourceSnapshotsRequest
) => any;
export declare const ResourceSnapshotSummaryFilterSensitiveLog: (
  obj: ResourceSnapshotSummary
) => any;
export declare const ListResourceSnapshotsResponseFilterSensitiveLog: (
  obj: ListResourceSnapshotsResponse
) => any;
