"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.de_GetEngagementCommand = exports.de_GetAwsOpportunitySummaryCommand = exports.de_DisassociateOpportunityCommand = exports.de_DeleteResourceSnapshotJobCommand = exports.de_CreateResourceSnapshotJobCommand = exports.de_CreateResourceSnapshotCommand = exports.de_CreateOpportunityCommand = exports.de_CreateEngagementInvitationCommand = exports.de_CreateEngagementCommand = exports.de_AssociateOpportunityCommand = exports.de_AssignOpportunityCommand = exports.de_AcceptEngagementInvitationCommand = exports.se_UpdateOpportunityCommand = exports.se_UntagResourceCommand = exports.se_TagResourceCommand = exports.se_SubmitOpportunityCommand = exports.se_StopResourceSnapshotJobCommand = exports.se_StartResourceSnapshotJobCommand = exports.se_StartEngagementFromOpportunityTaskCommand = exports.se_StartEngagementByAcceptingInvitationTaskCommand = exports.se_RejectEngagementInvitationCommand = exports.se_PutSellingSystemSettingsCommand = exports.se_ListTagsForResourceCommand = exports.se_ListSolutionsCommand = exports.se_ListResourceSnapshotsCommand = exports.se_ListResourceSnapshotJobsCommand = exports.se_ListOpportunitiesCommand = exports.se_ListEngagementsCommand = exports.se_ListEngagementResourceAssociationsCommand = exports.se_ListEngagementMembersCommand = exports.se_ListEngagementInvitationsCommand = exports.se_ListEngagementFromOpportunityTasksCommand = exports.se_ListEngagementByAcceptingInvitationTasksCommand = exports.se_GetSellingSystemSettingsCommand = exports.se_GetResourceSnapshotJobCommand = exports.se_GetResourceSnapshotCommand = exports.se_GetOpportunityCommand = exports.se_GetEngagementInvitationCommand = exports.se_GetEngagementCommand = exports.se_GetAwsOpportunitySummaryCommand = exports.se_DisassociateOpportunityCommand = exports.se_DeleteResourceSnapshotJobCommand = exports.se_CreateResourceSnapshotJobCommand = exports.se_CreateResourceSnapshotCommand = exports.se_CreateOpportunityCommand = exports.se_CreateEngagementInvitationCommand = exports.se_CreateEngagementCommand = exports.se_AssociateOpportunityCommand = exports.se_AssignOpportunityCommand = exports.se_AcceptEngagementInvitationCommand = void 0;
exports.de_UpdateOpportunityCommand = exports.de_UntagResourceCommand = exports.de_TagResourceCommand = exports.de_SubmitOpportunityCommand = exports.de_StopResourceSnapshotJobCommand = exports.de_StartResourceSnapshotJobCommand = exports.de_StartEngagementFromOpportunityTaskCommand = exports.de_StartEngagementByAcceptingInvitationTaskCommand = exports.de_RejectEngagementInvitationCommand = exports.de_PutSellingSystemSettingsCommand = exports.de_ListTagsForResourceCommand = exports.de_ListSolutionsCommand = exports.de_ListResourceSnapshotsCommand = exports.de_ListResourceSnapshotJobsCommand = exports.de_ListOpportunitiesCommand = exports.de_ListEngagementsCommand = exports.de_ListEngagementResourceAssociationsCommand = exports.de_ListEngagementMembersCommand = exports.de_ListEngagementInvitationsCommand = exports.de_ListEngagementFromOpportunityTasksCommand = exports.de_ListEngagementByAcceptingInvitationTasksCommand = exports.de_GetSellingSystemSettingsCommand = exports.de_GetResourceSnapshotJobCommand = exports.de_GetResourceSnapshotCommand = exports.de_GetOpportunityCommand = exports.de_GetEngagementInvitationCommand = void 0;
const core_1 = require("@aws-sdk/core");
const protocol_http_1 = require("@smithy/protocol-http");
const smithy_client_1 = require("@smithy/smithy-client");
const uuid_1 = require("uuid");
const models_0_1 = require("../models/models_0");
const PartnerCentralSellingServiceException_1 = require("../models/PartnerCentralSellingServiceException");
const se_AcceptEngagementInvitationCommand = async (input, context) => {
    const headers = sharedHeaders("AcceptEngagementInvitation");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_AcceptEngagementInvitationCommand = se_AcceptEngagementInvitationCommand;
const se_AssignOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("AssignOpportunity");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_AssignOpportunityCommand = se_AssignOpportunityCommand;
const se_AssociateOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("AssociateOpportunity");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_AssociateOpportunityCommand = se_AssociateOpportunityCommand;
const se_CreateEngagementCommand = async (input, context) => {
    const headers = sharedHeaders("CreateEngagement");
    let body;
    body = JSON.stringify(se_CreateEngagementRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_CreateEngagementCommand = se_CreateEngagementCommand;
const se_CreateEngagementInvitationCommand = async (input, context) => {
    const headers = sharedHeaders("CreateEngagementInvitation");
    let body;
    body = JSON.stringify(se_CreateEngagementInvitationRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_CreateEngagementInvitationCommand = se_CreateEngagementInvitationCommand;
const se_CreateOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("CreateOpportunity");
    let body;
    body = JSON.stringify(se_CreateOpportunityRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_CreateOpportunityCommand = se_CreateOpportunityCommand;
const se_CreateResourceSnapshotCommand = async (input, context) => {
    const headers = sharedHeaders("CreateResourceSnapshot");
    let body;
    body = JSON.stringify(se_CreateResourceSnapshotRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_CreateResourceSnapshotCommand = se_CreateResourceSnapshotCommand;
const se_CreateResourceSnapshotJobCommand = async (input, context) => {
    const headers = sharedHeaders("CreateResourceSnapshotJob");
    let body;
    body = JSON.stringify(se_CreateResourceSnapshotJobRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_CreateResourceSnapshotJobCommand = se_CreateResourceSnapshotJobCommand;
const se_DeleteResourceSnapshotJobCommand = async (input, context) => {
    const headers = sharedHeaders("DeleteResourceSnapshotJob");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_DeleteResourceSnapshotJobCommand = se_DeleteResourceSnapshotJobCommand;
const se_DisassociateOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("DisassociateOpportunity");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_DisassociateOpportunityCommand = se_DisassociateOpportunityCommand;
const se_GetAwsOpportunitySummaryCommand = async (input, context) => {
    const headers = sharedHeaders("GetAwsOpportunitySummary");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetAwsOpportunitySummaryCommand = se_GetAwsOpportunitySummaryCommand;
const se_GetEngagementCommand = async (input, context) => {
    const headers = sharedHeaders("GetEngagement");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetEngagementCommand = se_GetEngagementCommand;
const se_GetEngagementInvitationCommand = async (input, context) => {
    const headers = sharedHeaders("GetEngagementInvitation");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetEngagementInvitationCommand = se_GetEngagementInvitationCommand;
const se_GetOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("GetOpportunity");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetOpportunityCommand = se_GetOpportunityCommand;
const se_GetResourceSnapshotCommand = async (input, context) => {
    const headers = sharedHeaders("GetResourceSnapshot");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetResourceSnapshotCommand = se_GetResourceSnapshotCommand;
const se_GetResourceSnapshotJobCommand = async (input, context) => {
    const headers = sharedHeaders("GetResourceSnapshotJob");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetResourceSnapshotJobCommand = se_GetResourceSnapshotJobCommand;
const se_GetSellingSystemSettingsCommand = async (input, context) => {
    const headers = sharedHeaders("GetSellingSystemSettings");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_GetSellingSystemSettingsCommand = se_GetSellingSystemSettingsCommand;
const se_ListEngagementByAcceptingInvitationTasksCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagementByAcceptingInvitationTasks");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementByAcceptingInvitationTasksCommand = se_ListEngagementByAcceptingInvitationTasksCommand;
const se_ListEngagementFromOpportunityTasksCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagementFromOpportunityTasks");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementFromOpportunityTasksCommand = se_ListEngagementFromOpportunityTasksCommand;
const se_ListEngagementInvitationsCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagementInvitations");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementInvitationsCommand = se_ListEngagementInvitationsCommand;
const se_ListEngagementMembersCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagementMembers");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementMembersCommand = se_ListEngagementMembersCommand;
const se_ListEngagementResourceAssociationsCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagementResourceAssociations");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementResourceAssociationsCommand = se_ListEngagementResourceAssociationsCommand;
const se_ListEngagementsCommand = async (input, context) => {
    const headers = sharedHeaders("ListEngagements");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListEngagementsCommand = se_ListEngagementsCommand;
const se_ListOpportunitiesCommand = async (input, context) => {
    const headers = sharedHeaders("ListOpportunities");
    let body;
    body = JSON.stringify(se_ListOpportunitiesRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListOpportunitiesCommand = se_ListOpportunitiesCommand;
const se_ListResourceSnapshotJobsCommand = async (input, context) => {
    const headers = sharedHeaders("ListResourceSnapshotJobs");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListResourceSnapshotJobsCommand = se_ListResourceSnapshotJobsCommand;
const se_ListResourceSnapshotsCommand = async (input, context) => {
    const headers = sharedHeaders("ListResourceSnapshots");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListResourceSnapshotsCommand = se_ListResourceSnapshotsCommand;
const se_ListSolutionsCommand = async (input, context) => {
    const headers = sharedHeaders("ListSolutions");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListSolutionsCommand = se_ListSolutionsCommand;
const se_ListTagsForResourceCommand = async (input, context) => {
    const headers = sharedHeaders("ListTagsForResource");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_ListTagsForResourceCommand = se_ListTagsForResourceCommand;
const se_PutSellingSystemSettingsCommand = async (input, context) => {
    const headers = sharedHeaders("PutSellingSystemSettings");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_PutSellingSystemSettingsCommand = se_PutSellingSystemSettingsCommand;
const se_RejectEngagementInvitationCommand = async (input, context) => {
    const headers = sharedHeaders("RejectEngagementInvitation");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_RejectEngagementInvitationCommand = se_RejectEngagementInvitationCommand;
const se_StartEngagementByAcceptingInvitationTaskCommand = async (input, context) => {
    const headers = sharedHeaders("StartEngagementByAcceptingInvitationTask");
    let body;
    body = JSON.stringify(se_StartEngagementByAcceptingInvitationTaskRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_StartEngagementByAcceptingInvitationTaskCommand = se_StartEngagementByAcceptingInvitationTaskCommand;
const se_StartEngagementFromOpportunityTaskCommand = async (input, context) => {
    const headers = sharedHeaders("StartEngagementFromOpportunityTask");
    let body;
    body = JSON.stringify(se_StartEngagementFromOpportunityTaskRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_StartEngagementFromOpportunityTaskCommand = se_StartEngagementFromOpportunityTaskCommand;
const se_StartResourceSnapshotJobCommand = async (input, context) => {
    const headers = sharedHeaders("StartResourceSnapshotJob");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_StartResourceSnapshotJobCommand = se_StartResourceSnapshotJobCommand;
const se_StopResourceSnapshotJobCommand = async (input, context) => {
    const headers = sharedHeaders("StopResourceSnapshotJob");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_StopResourceSnapshotJobCommand = se_StopResourceSnapshotJobCommand;
const se_SubmitOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("SubmitOpportunity");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_SubmitOpportunityCommand = se_SubmitOpportunityCommand;
const se_TagResourceCommand = async (input, context) => {
    const headers = sharedHeaders("TagResource");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_TagResourceCommand = se_TagResourceCommand;
const se_UntagResourceCommand = async (input, context) => {
    const headers = sharedHeaders("UntagResource");
    let body;
    body = JSON.stringify((0, smithy_client_1._json)(input));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_UntagResourceCommand = se_UntagResourceCommand;
const se_UpdateOpportunityCommand = async (input, context) => {
    const headers = sharedHeaders("UpdateOpportunity");
    let body;
    body = JSON.stringify(se_UpdateOpportunityRequest(input, context));
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
exports.se_UpdateOpportunityCommand = se_UpdateOpportunityCommand;
const de_AcceptEngagementInvitationCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_AcceptEngagementInvitationCommand = de_AcceptEngagementInvitationCommand;
const de_AssignOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_AssignOpportunityCommand = de_AssignOpportunityCommand;
const de_AssociateOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_AssociateOpportunityCommand = de_AssociateOpportunityCommand;
const de_CreateEngagementCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_CreateEngagementCommand = de_CreateEngagementCommand;
const de_CreateEngagementInvitationCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_CreateEngagementInvitationCommand = de_CreateEngagementInvitationCommand;
const de_CreateOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_CreateOpportunityResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_CreateOpportunityCommand = de_CreateOpportunityCommand;
const de_CreateResourceSnapshotCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_CreateResourceSnapshotCommand = de_CreateResourceSnapshotCommand;
const de_CreateResourceSnapshotJobCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_CreateResourceSnapshotJobCommand = de_CreateResourceSnapshotJobCommand;
const de_DeleteResourceSnapshotJobCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_DeleteResourceSnapshotJobCommand = de_DeleteResourceSnapshotJobCommand;
const de_DisassociateOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_DisassociateOpportunityCommand = de_DisassociateOpportunityCommand;
const de_GetAwsOpportunitySummaryCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetAwsOpportunitySummaryResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetAwsOpportunitySummaryCommand = de_GetAwsOpportunitySummaryCommand;
const de_GetEngagementCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetEngagementResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetEngagementCommand = de_GetEngagementCommand;
const de_GetEngagementInvitationCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetEngagementInvitationResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetEngagementInvitationCommand = de_GetEngagementInvitationCommand;
const de_GetOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetOpportunityResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetOpportunityCommand = de_GetOpportunityCommand;
const de_GetResourceSnapshotCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetResourceSnapshotResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetResourceSnapshotCommand = de_GetResourceSnapshotCommand;
const de_GetResourceSnapshotJobCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_GetResourceSnapshotJobResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetResourceSnapshotJobCommand = de_GetResourceSnapshotJobCommand;
const de_GetSellingSystemSettingsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_GetSellingSystemSettingsCommand = de_GetSellingSystemSettingsCommand;
const de_ListEngagementByAcceptingInvitationTasksCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListEngagementByAcceptingInvitationTasksResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementByAcceptingInvitationTasksCommand = de_ListEngagementByAcceptingInvitationTasksCommand;
const de_ListEngagementFromOpportunityTasksCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListEngagementFromOpportunityTasksResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementFromOpportunityTasksCommand = de_ListEngagementFromOpportunityTasksCommand;
const de_ListEngagementInvitationsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListEngagementInvitationsResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementInvitationsCommand = de_ListEngagementInvitationsCommand;
const de_ListEngagementMembersCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementMembersCommand = de_ListEngagementMembersCommand;
const de_ListEngagementResourceAssociationsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementResourceAssociationsCommand = de_ListEngagementResourceAssociationsCommand;
const de_ListEngagementsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListEngagementsResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListEngagementsCommand = de_ListEngagementsCommand;
const de_ListOpportunitiesCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListOpportunitiesResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListOpportunitiesCommand = de_ListOpportunitiesCommand;
const de_ListResourceSnapshotJobsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListResourceSnapshotJobsCommand = de_ListResourceSnapshotJobsCommand;
const de_ListResourceSnapshotsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListResourceSnapshotsCommand = de_ListResourceSnapshotsCommand;
const de_ListSolutionsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_ListSolutionsResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListSolutionsCommand = de_ListSolutionsCommand;
const de_ListTagsForResourceCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_ListTagsForResourceCommand = de_ListTagsForResourceCommand;
const de_PutSellingSystemSettingsCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_PutSellingSystemSettingsCommand = de_PutSellingSystemSettingsCommand;
const de_RejectEngagementInvitationCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_RejectEngagementInvitationCommand = de_RejectEngagementInvitationCommand;
const de_StartEngagementByAcceptingInvitationTaskCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_StartEngagementByAcceptingInvitationTaskResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_StartEngagementByAcceptingInvitationTaskCommand = de_StartEngagementByAcceptingInvitationTaskCommand;
const de_StartEngagementFromOpportunityTaskCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_StartEngagementFromOpportunityTaskResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_StartEngagementFromOpportunityTaskCommand = de_StartEngagementFromOpportunityTaskCommand;
const de_StartResourceSnapshotJobCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_StartResourceSnapshotJobCommand = de_StartResourceSnapshotJobCommand;
const de_StopResourceSnapshotJobCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_StopResourceSnapshotJobCommand = de_StopResourceSnapshotJobCommand;
const de_SubmitOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, smithy_client_1.collectBody)(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output),
    };
    return response;
};
exports.de_SubmitOpportunityCommand = de_SubmitOpportunityCommand;
const de_TagResourceCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_TagResourceCommand = de_TagResourceCommand;
const de_UntagResourceCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = (0, smithy_client_1._json)(data);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_UntagResourceCommand = de_UntagResourceCommand;
const de_UpdateOpportunityCommand = async (output, context) => {
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, core_1.parseJsonBody)(output.body, context);
    let contents = {};
    contents = de_UpdateOpportunityResponse(data, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents,
    };
    return response;
};
exports.de_UpdateOpportunityCommand = de_UpdateOpportunityCommand;
const de_CommandError = async (output, context) => {
    const parsedOutput = {
        ...output,
        body: await (0, core_1.parseJsonErrorBody)(output.body, context),
    };
    const errorCode = (0, core_1.loadRestJsonErrorCode)(output, parsedOutput.body);
    switch (errorCode) {
        case "AccessDeniedException":
        case "com.amazonaws.partnercentralselling#AccessDeniedException":
            throw await de_AccessDeniedExceptionRes(parsedOutput, context);
        case "ConflictException":
        case "com.amazonaws.partnercentralselling#ConflictException":
            throw await de_ConflictExceptionRes(parsedOutput, context);
        case "InternalServerException":
        case "com.amazonaws.partnercentralselling#InternalServerException":
            throw await de_InternalServerExceptionRes(parsedOutput, context);
        case "ResourceNotFoundException":
        case "com.amazonaws.partnercentralselling#ResourceNotFoundException":
            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
        case "ThrottlingException":
        case "com.amazonaws.partnercentralselling#ThrottlingException":
            throw await de_ThrottlingExceptionRes(parsedOutput, context);
        case "ValidationException":
        case "com.amazonaws.partnercentralselling#ValidationException":
            throw await de_ValidationExceptionRes(parsedOutput, context);
        case "ServiceQuotaExceededException":
        case "com.amazonaws.partnercentralselling#ServiceQuotaExceededException":
            throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
        default:
            const parsedBody = parsedOutput.body;
            return throwDefaultError({
                output,
                parsedBody,
                errorCode,
            });
    }
};
const de_AccessDeniedExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.AccessDeniedException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_ConflictExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.ConflictException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_InternalServerExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.InternalServerException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.ResourceNotFoundException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_ServiceQuotaExceededExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.ServiceQuotaExceededException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_ThrottlingExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.ThrottlingException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const de_ValidationExceptionRes = async (parsedOutput, context) => {
    const body = parsedOutput.body;
    const deserialized = (0, smithy_client_1._json)(body);
    const exception = new models_0_1.ValidationException({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized,
    });
    return (0, smithy_client_1.decorateServiceException)(exception, body);
};
const se_CreateEngagementInvitationRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        EngagementIdentifier: [],
        Invitation: smithy_client_1._json,
    });
};
const se_CreateEngagementRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        Contexts: smithy_client_1._json,
        Description: [],
        Title: [],
    });
};
const se_CreateOpportunityRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        Customer: smithy_client_1._json,
        LifeCycle: (_) => se_LifeCycle(_, context),
        Marketing: smithy_client_1._json,
        NationalSecurity: [],
        OpportunityTeam: smithy_client_1._json,
        OpportunityType: [],
        Origin: [],
        PartnerOpportunityIdentifier: [],
        PrimaryNeedsFromAws: smithy_client_1._json,
        Project: smithy_client_1._json,
        SoftwareRevenue: smithy_client_1._json,
    });
};
const se_CreateResourceSnapshotJobRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        EngagementIdentifier: [],
        ResourceIdentifier: [],
        ResourceSnapshotTemplateIdentifier: [],
        ResourceType: [],
        Tags: smithy_client_1._json,
    });
};
const se_CreateResourceSnapshotRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        EngagementIdentifier: [],
        ResourceIdentifier: [],
        ResourceSnapshotTemplateIdentifier: [],
        ResourceType: [],
    });
};
const se_LastModifiedDate = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        AfterLastModifiedDate: smithy_client_1.serializeDateTime,
        BeforeLastModifiedDate: smithy_client_1.serializeDateTime,
    });
};
const se_LifeCycle = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        ClosedLostReason: [],
        NextSteps: [],
        NextStepsHistory: (_) => se_NextStepsHistories(_, context),
        ReviewComments: [],
        ReviewStatus: [],
        ReviewStatusReason: [],
        Stage: [],
        TargetCloseDate: [],
    });
};
const se_ListOpportunitiesRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        CustomerCompanyName: smithy_client_1._json,
        Identifier: smithy_client_1._json,
        LastModifiedDate: (_) => se_LastModifiedDate(_, context),
        LifeCycleReviewStatus: smithy_client_1._json,
        LifeCycleStage: smithy_client_1._json,
        MaxResults: [],
        NextToken: [],
        Sort: smithy_client_1._json,
    });
};
const se_NextStepsHistories = (input, context) => {
    return input
        .filter((e) => e != null)
        .map((entry) => {
        return se_NextStepsHistory(entry, context);
    });
};
const se_NextStepsHistory = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Time: smithy_client_1.serializeDateTime,
        Value: [],
    });
};
const se_StartEngagementByAcceptingInvitationTaskRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        Identifier: [],
        Tags: smithy_client_1._json,
    });
};
const se_StartEngagementFromOpportunityTaskRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        AwsSubmission: smithy_client_1._json,
        Catalog: [],
        ClientToken: [true, (_) => _ ?? (0, uuid_1.v4)()],
        Identifier: [],
        Tags: smithy_client_1._json,
    });
};
const se_UpdateOpportunityRequest = (input, context) => {
    return (0, smithy_client_1.take)(input, {
        Catalog: [],
        Customer: smithy_client_1._json,
        Identifier: [],
        LastModifiedDate: smithy_client_1.serializeDateTime,
        LifeCycle: (_) => se_LifeCycle(_, context),
        Marketing: smithy_client_1._json,
        NationalSecurity: [],
        OpportunityType: [],
        PartnerOpportunityIdentifier: [],
        PrimaryNeedsFromAws: smithy_client_1._json,
        Project: smithy_client_1._json,
        SoftwareRevenue: smithy_client_1._json,
    });
};
const de_AwsOpportunityLifeCycle = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        ClosedLostReason: smithy_client_1.expectString,
        NextSteps: smithy_client_1.expectString,
        NextStepsHistory: (_) => de_ProfileNextStepsHistories(_, context),
        Stage: smithy_client_1.expectString,
        TargetCloseDate: smithy_client_1.expectString,
    });
};
const de_CreateOpportunityResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Id: smithy_client_1.expectString,
        LastModifiedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        PartnerOpportunityIdentifier: smithy_client_1.expectString,
    });
};
const de_EngagementInvitationSummaries = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_EngagementInvitationSummary(entry, context);
    });
    return retVal;
};
const de_EngagementInvitationSummary = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        EngagementId: smithy_client_1.expectString,
        EngagementTitle: smithy_client_1.expectString,
        ExpirationDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Id: smithy_client_1.expectString,
        InvitationDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        ParticipantType: smithy_client_1.expectString,
        PayloadType: smithy_client_1.expectString,
        Receiver: (_) => (0, smithy_client_1._json)((0, core_1.awsExpectUnion)(_)),
        SenderAwsAccountId: smithy_client_1.expectString,
        SenderCompanyName: smithy_client_1.expectString,
        Status: smithy_client_1.expectString,
    });
};
const de_EngagementSummary = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        CreatedAt: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        CreatedBy: smithy_client_1.expectString,
        Id: smithy_client_1.expectString,
        MemberCount: smithy_client_1.expectInt32,
        Title: smithy_client_1.expectString,
    });
};
const de_EngagementSummaryList = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_EngagementSummary(entry, context);
    });
    return retVal;
};
const de_GetAwsOpportunitySummaryResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Catalog: smithy_client_1.expectString,
        Customer: smithy_client_1._json,
        Insights: smithy_client_1._json,
        InvolvementType: smithy_client_1.expectString,
        InvolvementTypeChangeReason: smithy_client_1.expectString,
        LifeCycle: (_) => de_AwsOpportunityLifeCycle(_, context),
        OpportunityTeam: smithy_client_1._json,
        Origin: smithy_client_1.expectString,
        Project: smithy_client_1._json,
        RelatedEntityIds: smithy_client_1._json,
        RelatedOpportunityId: smithy_client_1.expectString,
        Visibility: smithy_client_1.expectString,
    });
};
const de_GetEngagementInvitationResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        EngagementDescription: smithy_client_1.expectString,
        EngagementId: smithy_client_1.expectString,
        EngagementTitle: smithy_client_1.expectString,
        ExistingMembers: smithy_client_1._json,
        ExpirationDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Id: smithy_client_1.expectString,
        InvitationDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        InvitationMessage: smithy_client_1.expectString,
        Payload: (_) => (0, smithy_client_1._json)((0, core_1.awsExpectUnion)(_)),
        PayloadType: smithy_client_1.expectString,
        Receiver: (_) => (0, smithy_client_1._json)((0, core_1.awsExpectUnion)(_)),
        RejectionReason: smithy_client_1.expectString,
        SenderAwsAccountId: smithy_client_1.expectString,
        SenderCompanyName: smithy_client_1.expectString,
        Status: smithy_client_1.expectString,
    });
};
const de_GetEngagementResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Contexts: smithy_client_1._json,
        CreatedAt: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        CreatedBy: smithy_client_1.expectString,
        Description: smithy_client_1.expectString,
        Id: smithy_client_1.expectString,
        MemberCount: smithy_client_1.expectInt32,
        Title: smithy_client_1.expectString,
    });
};
const de_GetOpportunityResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        CreatedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Customer: smithy_client_1._json,
        Id: smithy_client_1.expectString,
        LastModifiedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        LifeCycle: (_) => de_LifeCycle(_, context),
        Marketing: smithy_client_1._json,
        NationalSecurity: smithy_client_1.expectString,
        OpportunityTeam: smithy_client_1._json,
        OpportunityType: smithy_client_1.expectString,
        PartnerOpportunityIdentifier: smithy_client_1.expectString,
        PrimaryNeedsFromAws: smithy_client_1._json,
        Project: smithy_client_1._json,
        RelatedEntityIdentifiers: smithy_client_1._json,
        SoftwareRevenue: smithy_client_1._json,
    });
};
const de_GetResourceSnapshotJobResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        CreatedAt: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        EngagementId: smithy_client_1.expectString,
        Id: smithy_client_1.expectString,
        LastFailure: smithy_client_1.expectString,
        LastSuccessfulExecutionDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        ResourceArn: smithy_client_1.expectString,
        ResourceId: smithy_client_1.expectString,
        ResourceSnapshotTemplateName: smithy_client_1.expectString,
        ResourceType: smithy_client_1.expectString,
        Status: smithy_client_1.expectString,
    });
};
const de_GetResourceSnapshotResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        CreatedAt: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        CreatedBy: smithy_client_1.expectString,
        EngagementId: smithy_client_1.expectString,
        Payload: (_) => (0, smithy_client_1._json)((0, core_1.awsExpectUnion)(_)),
        ResourceId: smithy_client_1.expectString,
        ResourceSnapshotTemplateName: smithy_client_1.expectString,
        ResourceType: smithy_client_1.expectString,
        Revision: smithy_client_1.expectInt32,
    });
};
const de_LifeCycle = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        ClosedLostReason: smithy_client_1.expectString,
        NextSteps: smithy_client_1.expectString,
        NextStepsHistory: (_) => de_NextStepsHistories(_, context),
        ReviewComments: smithy_client_1.expectString,
        ReviewStatus: smithy_client_1.expectString,
        ReviewStatusReason: smithy_client_1.expectString,
        Stage: smithy_client_1.expectString,
        TargetCloseDate: smithy_client_1.expectString,
    });
};
const de_ListEngagementByAcceptingInvitationTasksResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        NextToken: smithy_client_1.expectString,
        TaskSummaries: (_) => de_ListEngagementByAcceptingInvitationTaskSummaries(_, context),
    });
};
const de_ListEngagementByAcceptingInvitationTaskSummaries = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_ListEngagementByAcceptingInvitationTaskSummary(entry, context);
    });
    return retVal;
};
const de_ListEngagementByAcceptingInvitationTaskSummary = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementInvitationId: smithy_client_1.expectString,
        Message: smithy_client_1.expectString,
        OpportunityId: smithy_client_1.expectString,
        ReasonCode: smithy_client_1.expectString,
        ResourceSnapshotJobId: smithy_client_1.expectString,
        StartTime: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        TaskArn: smithy_client_1.expectString,
        TaskId: smithy_client_1.expectString,
        TaskStatus: smithy_client_1.expectString,
    });
};
const de_ListEngagementFromOpportunityTasksResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        NextToken: smithy_client_1.expectString,
        TaskSummaries: (_) => de_ListEngagementFromOpportunityTaskSummaries(_, context),
    });
};
const de_ListEngagementFromOpportunityTaskSummaries = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_ListEngagementFromOpportunityTaskSummary(entry, context);
    });
    return retVal;
};
const de_ListEngagementFromOpportunityTaskSummary = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementId: smithy_client_1.expectString,
        EngagementInvitationId: smithy_client_1.expectString,
        Message: smithy_client_1.expectString,
        OpportunityId: smithy_client_1.expectString,
        ReasonCode: smithy_client_1.expectString,
        ResourceSnapshotJobId: smithy_client_1.expectString,
        StartTime: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        TaskArn: smithy_client_1.expectString,
        TaskId: smithy_client_1.expectString,
        TaskStatus: smithy_client_1.expectString,
    });
};
const de_ListEngagementInvitationsResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementInvitationSummaries: (_) => de_EngagementInvitationSummaries(_, context),
        NextToken: smithy_client_1.expectString,
    });
};
const de_ListEngagementsResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementSummaryList: (_) => de_EngagementSummaryList(_, context),
        NextToken: smithy_client_1.expectString,
    });
};
const de_ListOpportunitiesResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        NextToken: smithy_client_1.expectString,
        OpportunitySummaries: (_) => de_OpportunitySummaries(_, context),
    });
};
const de_ListSolutionsResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        NextToken: smithy_client_1.expectString,
        SolutionSummaries: (_) => de_SolutionList(_, context),
    });
};
const de_NextStepsHistories = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_NextStepsHistory(entry, context);
    });
    return retVal;
};
const de_NextStepsHistory = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Time: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Value: smithy_client_1.expectString,
    });
};
const de_OpportunitySummaries = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_OpportunitySummary(entry, context);
    });
    return retVal;
};
const de_OpportunitySummary = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        CreatedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Customer: smithy_client_1._json,
        Id: smithy_client_1.expectString,
        LastModifiedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        LifeCycle: smithy_client_1._json,
        OpportunityType: smithy_client_1.expectString,
        PartnerOpportunityIdentifier: smithy_client_1.expectString,
        Project: smithy_client_1._json,
    });
};
const de_ProfileNextStepsHistories = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_ProfileNextStepsHistory(entry, context);
    });
    return retVal;
};
const de_ProfileNextStepsHistory = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Time: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Value: smithy_client_1.expectString,
    });
};
const de_SolutionBase = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Arn: smithy_client_1.expectString,
        Catalog: smithy_client_1.expectString,
        Category: smithy_client_1.expectString,
        CreatedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        Id: smithy_client_1.expectString,
        Name: smithy_client_1.expectString,
        Status: smithy_client_1.expectString,
    });
};
const de_SolutionList = (output, context) => {
    const retVal = (output || [])
        .filter((e) => e != null)
        .map((entry) => {
        return de_SolutionBase(entry, context);
    });
    return retVal;
};
const de_StartEngagementByAcceptingInvitationTaskResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementInvitationId: smithy_client_1.expectString,
        Message: smithy_client_1.expectString,
        OpportunityId: smithy_client_1.expectString,
        ReasonCode: smithy_client_1.expectString,
        ResourceSnapshotJobId: smithy_client_1.expectString,
        StartTime: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        TaskArn: smithy_client_1.expectString,
        TaskId: smithy_client_1.expectString,
        TaskStatus: smithy_client_1.expectString,
    });
};
const de_StartEngagementFromOpportunityTaskResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        EngagementId: smithy_client_1.expectString,
        EngagementInvitationId: smithy_client_1.expectString,
        Message: smithy_client_1.expectString,
        OpportunityId: smithy_client_1.expectString,
        ReasonCode: smithy_client_1.expectString,
        ResourceSnapshotJobId: smithy_client_1.expectString,
        StartTime: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
        TaskArn: smithy_client_1.expectString,
        TaskId: smithy_client_1.expectString,
        TaskStatus: smithy_client_1.expectString,
    });
};
const de_UpdateOpportunityResponse = (output, context) => {
    return (0, smithy_client_1.take)(output, {
        Id: smithy_client_1.expectString,
        LastModifiedDate: (_) => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(_)),
    });
};
const deserializeMetadata = (output) => ({
    httpStatusCode: output.statusCode,
    requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"],
});
const collectBodyString = (streamBody, context) => (0, smithy_client_1.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));
const throwDefaultError = (0, smithy_client_1.withBaseException)(PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException);
const buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {
    const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
    const contents = {
        protocol,
        hostname,
        port,
        method: "POST",
        path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
        headers,
    };
    if (resolvedHostname !== undefined) {
        contents.hostname = resolvedHostname;
    }
    if (body !== undefined) {
        contents.body = body;
    }
    return new protocol_http_1.HttpRequest(contents);
};
function sharedHeaders(operation) {
    return {
        "content-type": "application/x-amz-json-1.0",
        "x-amz-target": `AWSPartnerCentralSelling.${operation}`,
    };
}
