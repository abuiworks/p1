"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpportunitySortName = exports.InvolvementTypeChangeReason = exports.RevenueModel = exports.SalesActivity = exports.DeliveryModel = exports.CompetitorName = exports.PrimaryNeedFromAws = exports.OpportunityOrigin = exports.OpportunityType = exports.NationalSecurity = exports.MarketingSource = exports.Channel = exports.Stage = exports.ReviewStatus = exports.ClosedLostReason = exports.OpportunityEngagementInvitationSortName = exports.ParticipantType = exports.InvitationStatus = exports.EngagementInvitationPayloadType = exports.Receiver = exports.Payload = exports.ReceiverResponsibility = exports.Visibility = exports.SalesInvolvementType = exports.ReasonCode = exports.TaskStatus = exports.ListTasksSortName = exports.SortOrder = exports.EngagementSortName = exports.ServiceQuotaExceededException = exports.EngagementContextType = exports.EngagementContextPayload = exports.PaymentFrequency = exports.CurrencyCode = exports.AwsOpportunityStage = exports.EngagementScore = exports.AwsMemberBusinessTitle = exports.AwsFundingUsed = exports.AwsClosedLostReason = exports.RelatedEntityType = exports.Industry = exports.CountryCode = exports.ValidationException = exports.ValidationExceptionReason = exports.ValidationExceptionErrorCode = exports.ThrottlingException = exports.ResourceNotFoundException = exports.InternalServerException = exports.ConflictException = exports.AccessDeniedException = void 0;
exports.GetAwsOpportunitySummaryResponseFilterSensitiveLog = exports.CreateOpportunityRequestFilterSensitiveLog = exports.SoftwareRevenueFilterSensitiveLog = exports.MonetaryValueFilterSensitiveLog = exports.ProjectFilterSensitiveLog = exports.LifeCycleFilterSensitiveLog = exports.CustomerFilterSensitiveLog = exports.ListEngagementInvitationsResponseFilterSensitiveLog = exports.EngagementInvitationSummaryFilterSensitiveLog = exports.ListEngagementInvitationsRequestFilterSensitiveLog = exports.GetEngagementInvitationResponseFilterSensitiveLog = exports.EngagementMemberSummaryFilterSensitiveLog = exports.CreateEngagementInvitationRequestFilterSensitiveLog = exports.InvitationFilterSensitiveLog = exports.ReceiverFilterSensitiveLog = exports.PayloadFilterSensitiveLog = exports.OpportunityInvitationPayloadFilterSensitiveLog = exports.SenderContactFilterSensitiveLog = exports.ProjectDetailsFilterSensitiveLog = exports.ListEngagementsResponseFilterSensitiveLog = exports.EngagementSummaryFilterSensitiveLog = exports.ListEngagementsRequestFilterSensitiveLog = exports.ListEngagementMembersResponseFilterSensitiveLog = exports.EngagementMemberFilterSensitiveLog = exports.GetEngagementResponseFilterSensitiveLog = exports.CreateEngagementRequestFilterSensitiveLog = exports.EngagementContextDetailsFilterSensitiveLog = exports.EngagementContextPayloadFilterSensitiveLog = exports.CustomerProjectsContextFilterSensitiveLog = exports.EngagementCustomerProjectDetailsFilterSensitiveLog = exports.EngagementCustomerFilterSensitiveLog = exports.AwsTeamMemberFilterSensitiveLog = exports.AwsOpportunityProjectFilterSensitiveLog = exports.ExpectedCustomerSpendFilterSensitiveLog = exports.AwsOpportunityLifeCycleFilterSensitiveLog = exports.AwsOpportunityCustomerFilterSensitiveLog = exports.ContactFilterSensitiveLog = exports.AssignOpportunityRequestFilterSensitiveLog = exports.AssigneeContactFilterSensitiveLog = exports.AccountSummaryFilterSensitiveLog = exports.AddressSummaryFilterSensitiveLog = exports.AccountReceiverFilterSensitiveLog = exports.AccountFilterSensitiveLog = exports.AddressFilterSensitiveLog = exports.SolutionStatus = exports.SolutionSortName = exports.SortBy = exports.ResourceSnapshotJobStatus = exports.ResourceSnapshotPayload = exports.ResourceType = void 0;
exports.ListResourceSnapshotsResponseFilterSensitiveLog = exports.ResourceSnapshotSummaryFilterSensitiveLog = exports.ListResourceSnapshotsRequestFilterSensitiveLog = exports.ListEngagementResourceAssociationsResponseFilterSensitiveLog = exports.EngagementResourceAssociationSummaryFilterSensitiveLog = exports.ListEngagementResourceAssociationsRequestFilterSensitiveLog = exports.GetResourceSnapshotResponseFilterSensitiveLog = exports.ResourceSnapshotPayloadFilterSensitiveLog = exports.OpportunitySummaryViewFilterSensitiveLog = exports.ProjectViewFilterSensitiveLog = exports.LifeCycleForViewFilterSensitiveLog = exports.UpdateOpportunityRequestFilterSensitiveLog = exports.ListOpportunitiesResponseFilterSensitiveLog = exports.OpportunitySummaryFilterSensitiveLog = exports.ProjectSummaryFilterSensitiveLog = exports.LifeCycleSummaryFilterSensitiveLog = exports.CustomerSummaryFilterSensitiveLog = exports.GetOpportunityResponseFilterSensitiveLog = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const PartnerCentralSellingServiceException_1 = require("./PartnerCentralSellingServiceException");
class AccessDeniedException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
exports.AccessDeniedException = AccessDeniedException;
class ConflictException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "ConflictException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
    }
}
exports.ConflictException = ConflictException;
class InternalServerException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "InternalServerException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
exports.InternalServerException = InternalServerException;
class ResourceNotFoundException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class ThrottlingException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "ThrottlingException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
exports.ThrottlingException = ThrottlingException;
exports.ValidationExceptionErrorCode = {
    ACTION_NOT_PERMITTED: "ACTION_NOT_PERMITTED",
    DUPLICATE_KEY_VALUE: "DUPLICATE_KEY_VALUE",
    INVALID_ENUM_VALUE: "INVALID_ENUM_VALUE",
    INVALID_RESOURCE_STATE: "INVALID_RESOURCE_STATE",
    INVALID_STRING_FORMAT: "INVALID_STRING_FORMAT",
    INVALID_VALUE: "INVALID_VALUE",
    REQUIRED_FIELD_MISSING: "REQUIRED_FIELD_MISSING",
    TOO_MANY_VALUES: "TOO_MANY_VALUES",
    VALUE_OUT_OF_RANGE: "VALUE_OUT_OF_RANGE",
};
exports.ValidationExceptionReason = {
    BUSINESS_VALIDATION_FAILED: "BUSINESS_VALIDATION_FAILED",
    REQUEST_VALIDATION_FAILED: "REQUEST_VALIDATION_FAILED",
};
class ValidationException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "ValidationException";
    $fault = "client";
    Message;
    Reason;
    ErrorList;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.ErrorList = opts.ErrorList;
    }
}
exports.ValidationException = ValidationException;
exports.CountryCode = {
    AD: "AD",
    AE: "AE",
    AF: "AF",
    AG: "AG",
    AI: "AI",
    AL: "AL",
    AM: "AM",
    AN: "AN",
    AO: "AO",
    AQ: "AQ",
    AR: "AR",
    AS: "AS",
    AT: "AT",
    AU: "AU",
    AW: "AW",
    AX: "AX",
    AZ: "AZ",
    BA: "BA",
    BB: "BB",
    BD: "BD",
    BE: "BE",
    BF: "BF",
    BG: "BG",
    BH: "BH",
    BI: "BI",
    BJ: "BJ",
    BL: "BL",
    BM: "BM",
    BN: "BN",
    BO: "BO",
    BQ: "BQ",
    BR: "BR",
    BS: "BS",
    BT: "BT",
    BV: "BV",
    BW: "BW",
    BY: "BY",
    BZ: "BZ",
    CA: "CA",
    CC: "CC",
    CD: "CD",
    CF: "CF",
    CG: "CG",
    CH: "CH",
    CI: "CI",
    CK: "CK",
    CL: "CL",
    CM: "CM",
    CN: "CN",
    CO: "CO",
    CR: "CR",
    CU: "CU",
    CV: "CV",
    CW: "CW",
    CX: "CX",
    CY: "CY",
    CZ: "CZ",
    DE: "DE",
    DJ: "DJ",
    DK: "DK",
    DM: "DM",
    DO: "DO",
    DZ: "DZ",
    EC: "EC",
    EE: "EE",
    EG: "EG",
    EH: "EH",
    ER: "ER",
    ES: "ES",
    ET: "ET",
    FI: "FI",
    FJ: "FJ",
    FK: "FK",
    FM: "FM",
    FO: "FO",
    FR: "FR",
    GA: "GA",
    GB: "GB",
    GD: "GD",
    GE: "GE",
    GF: "GF",
    GG: "GG",
    GH: "GH",
    GI: "GI",
    GL: "GL",
    GM: "GM",
    GN: "GN",
    GP: "GP",
    GQ: "GQ",
    GR: "GR",
    GS: "GS",
    GT: "GT",
    GU: "GU",
    GW: "GW",
    GY: "GY",
    HK: "HK",
    HM: "HM",
    HN: "HN",
    HR: "HR",
    HT: "HT",
    HU: "HU",
    ID: "ID",
    IE: "IE",
    IL: "IL",
    IM: "IM",
    IN: "IN",
    IO: "IO",
    IQ: "IQ",
    IR: "IR",
    IS: "IS",
    IT: "IT",
    JE: "JE",
    JM: "JM",
    JO: "JO",
    JP: "JP",
    KE: "KE",
    KG: "KG",
    KH: "KH",
    KI: "KI",
    KM: "KM",
    KN: "KN",
    KR: "KR",
    KW: "KW",
    KY: "KY",
    KZ: "KZ",
    LA: "LA",
    LB: "LB",
    LC: "LC",
    LI: "LI",
    LK: "LK",
    LR: "LR",
    LS: "LS",
    LT: "LT",
    LU: "LU",
    LV: "LV",
    LY: "LY",
    MA: "MA",
    MC: "MC",
    MD: "MD",
    ME: "ME",
    MF: "MF",
    MG: "MG",
    MH: "MH",
    MK: "MK",
    ML: "ML",
    MM: "MM",
    MN: "MN",
    MO: "MO",
    MP: "MP",
    MQ: "MQ",
    MR: "MR",
    MS: "MS",
    MT: "MT",
    MU: "MU",
    MV: "MV",
    MW: "MW",
    MX: "MX",
    MY: "MY",
    MZ: "MZ",
    NA: "NA",
    NC: "NC",
    NE: "NE",
    NF: "NF",
    NG: "NG",
    NI: "NI",
    NL: "NL",
    NO: "NO",
    NP: "NP",
    NR: "NR",
    NU: "NU",
    NZ: "NZ",
    OM: "OM",
    PA: "PA",
    PE: "PE",
    PF: "PF",
    PG: "PG",
    PH: "PH",
    PK: "PK",
    PL: "PL",
    PM: "PM",
    PN: "PN",
    PR: "PR",
    PS: "PS",
    PT: "PT",
    PW: "PW",
    PY: "PY",
    QA: "QA",
    RE: "RE",
    RO: "RO",
    RS: "RS",
    RU: "RU",
    RW: "RW",
    SA: "SA",
    SB: "SB",
    SC: "SC",
    SD: "SD",
    SE: "SE",
    SG: "SG",
    SH: "SH",
    SI: "SI",
    SJ: "SJ",
    SK: "SK",
    SL: "SL",
    SM: "SM",
    SN: "SN",
    SO: "SO",
    SR: "SR",
    SS: "SS",
    ST: "ST",
    SV: "SV",
    SX: "SX",
    SY: "SY",
    SZ: "SZ",
    TC: "TC",
    TD: "TD",
    TF: "TF",
    TG: "TG",
    TH: "TH",
    TJ: "TJ",
    TK: "TK",
    TL: "TL",
    TM: "TM",
    TN: "TN",
    TO: "TO",
    TR: "TR",
    TT: "TT",
    TV: "TV",
    TW: "TW",
    TZ: "TZ",
    UA: "UA",
    UG: "UG",
    UM: "UM",
    US: "US",
    UY: "UY",
    UZ: "UZ",
    VA: "VA",
    VC: "VC",
    VE: "VE",
    VG: "VG",
    VI: "VI",
    VN: "VN",
    VU: "VU",
    WF: "WF",
    WS: "WS",
    YE: "YE",
    YT: "YT",
    ZA: "ZA",
    ZM: "ZM",
    ZW: "ZW",
};
exports.Industry = {
    AEROSPACE_SATELLITE: "Aerospace",
    AGRICULTURE: "Agriculture",
    AUTOMOTIVE: "Automotive",
    COMPUTERS_ELECTRONICS: "Computers and Electronics",
    CONSUMER_GOODS: "Consumer Goods",
    EDUCATION: "Education",
    ENERGY_OIL_GAS: "Energy - Oil and Gas",
    ENERGY_POWER_UTILITIES: "Energy - Power and Utilities",
    FINANCIAL_SERVICES: "Financial Services",
    GAMING: "Gaming",
    GOVERNMENT: "Government",
    HEALTHCARE: "Healthcare",
    HOSPITALITY: "Hospitality",
    LIFE_SCIENCES: "Life Sciences",
    MANUFACTURING: "Manufacturing",
    MARKETING_ADVERTISING: "Marketing and Advertising",
    MEDIA_ENTERTAINMENT: "Media and Entertainment",
    MINING: "Mining",
    NON_PROFIT_ORGANIZATION: "Non-Profit Organization",
    OTHER: "Other",
    PROFESSIONAL_SERVICES: "Professional Services",
    REALESTATE_CONSTRUCTION: "Real Estate and Construction",
    RETAIL: "Retail",
    SOFTWARE_INTERNET: "Software and Internet",
    TELECOMMUNICATIONS: "Telecommunications",
    TRANSPORTATION_LOGISTICS: "Transportation and Logistics",
    TRAVEL: "Travel",
    WHOLESALE_DISTRIBUTION: "Wholesale and Distribution",
};
exports.RelatedEntityType = {
    AWS_MARKETPLACE_OFFERS: "AwsMarketplaceOffers",
    AWS_PRODUCTS: "AwsProducts",
    SOLUTIONS: "Solutions",
};
exports.AwsClosedLostReason = {
    ADMINISTRATIVE: "Administrative",
    BUSINESS_ASSOCIATE_AGREEMENT: "Business Associate Agreement",
    COMPANY_ACQUIRED_DISSOLVED: "Company Acquired/Dissolved",
    COMPETITIVE_OFFERING: "Competitive Offering",
    CUSTOMER_DATA_REQUIREMENT: "Customer Data Requirement",
    CUSTOMER_DEFICIENCY: "Customer Deficiency",
    CUSTOMER_EXPERIENCE: "Customer Experience",
    DELAY_CANCELLATION_OF_PROJECT: "Delay / Cancellation of Project",
    DUPLICATE: "Duplicate",
    DUPLICATE_OPPORTUNITY: "Duplicate Opportunity",
    EXECUTIVE_BLOCKER: "Executive Blocker",
    FAILED_VETTING: "Failed Vetting",
    FEATURE_LIMITATION: "Feature Limitation",
    FINANCIAL_COMMERCIAL: "Financial/Commercial",
    INSUFFICIENT_AMAZON_VALUE: "Insufficient Amazon Value",
    INSUFFICIENT_AWS_VALUE: "Insufficient AWS Value",
    INTERNATIONAL_CONSTRAINTS: "International Constraints",
    LEGAL_TAX_REGULATORY: "Legal / Tax / Regulatory",
    LEGAL_TERMS_AND_CONDITIONS: "Legal Terms and Conditions",
    LOST_TO_COMPETITOR: "Lost to Competitor",
    LOST_TO_COMPETITOR_GOOGLE: "Lost to Competitor - Google",
    LOST_TO_COMPETITOR_MICROSOFT: "Lost to Competitor - Microsoft",
    LOST_TO_COMPETITOR_OTHER: "Lost to Competitor - Other",
    LOST_TO_COMPETITOR_RACKSPACE: "Lost to Competitor - Rackspace",
    LOST_TO_COMPETITOR_SOFTLAYER: "Lost to Competitor - SoftLayer",
    LOST_TO_COMPETITOR_VMWARE: "Lost to Competitor - VMWare",
    NOT_COMMITTED_TO_AWS: "Not Committed to AWS",
    NO_CUSTOMER_REFERENCE: "No Customer Reference",
    NO_INTEGRATION_RESOURCES: "No Integration Resources",
    NO_OPPORTUNITY: "No Opportunity",
    NO_PERCEIVED_VALUE_OF_MP: "No Perceived Value of MP",
    NO_RESPONSE: "No Response",
    NO_UPDATE: "No Update",
    ON_PREMISES_DEPLOYMENT: "On Premises Deployment",
    OTHER: "Other",
    OTHER_DETAILS_IN_DESCRIPTION: "Other (Details in Description)",
    PARTNER_GAP: "Partner Gap",
    PAST_DUE: "Past Due",
    PEOPLE_RELATIONSHIP_GOVERNANCE: "People/Relationship/Governance",
    PLATFORM_TECHNOLOGY_LIMITATION: "Platform Technology Limitation",
    PREFERENCE_FOR_COMPETITOR: "Preference for Competitor",
    PRICE: "Price",
    PRODUCT_NOT_ON_AWS: "Product Not on AWS",
    PRODUCT_TECHNOLOGY: "Product/Technology",
    SECURITY_COMPLIANCE: "Security / Compliance",
    SELF_SERVICE: "Self-Service",
    TECHNICAL_LIMITATIONS: "Technical Limitations",
    TERM_SHEET_IMPASSE: "Term Sheet Impasse",
};
exports.AwsFundingUsed = {
    NO: "No",
    YES: "Yes",
};
exports.AwsMemberBusinessTitle = {
    AWS_ACCOUNT_OWNER: "AWSAccountOwner",
    AWS_SALES_REP: "AWSSalesRep",
    ISVSM: "ISVSM",
    PDM: "PDM",
    PSM: "PSM",
    WWPSPDM: "WWPSPDM",
};
exports.EngagementScore = {
    HIGH: "High",
    LOW: "Low",
    MEDIUM: "Medium",
};
exports.AwsOpportunityStage = {
    BUILDING_INTEGRATION: "Building Integration",
    BUSINESS_VALIDATION: "Business Validation",
    CLOSED_INCOMPLETE: "Closed Incomplete",
    CLOSED_LOST: "Closed Lost",
    COMMITTED: "Committed",
    COMPLETED: "Completed",
    CONTRACT_NEGOTIATION: "Contract Negotiation",
    DEFERRED_TO_PARTNER: "Deferred to Partner",
    ENGAGED: "Engaged",
    EVALUATING: "Evaluating",
    IDENTIFIED: "Identified",
    IN_PROGRESS: "In Progress",
    LAUNCHED: "Launched",
    NOT_STARTED: "Not Started",
    ONBOARDING: "Onboarding",
    ON_HOLD: "On-hold",
    PROSPECT: "Prospect",
    QUALIFIED: "Qualified",
    QUALIFY: "Qualify",
    RESEARCH: "Research",
    SELLER_ENGAGED: "Seller Engaged",
    SELLER_REGISTERED: "Seller Registered",
    TECHNICAL_VALIDATION: "Technical Validation",
    TERM_SHEET_NEGOTIATION: "Term Sheet Negotiation",
};
exports.CurrencyCode = {
    AED: "AED",
    AFN: "AFN",
    ALL: "ALL",
    AMD: "AMD",
    ANG: "ANG",
    AOA: "AOA",
    ARS: "ARS",
    AUD: "AUD",
    AWG: "AWG",
    AZN: "AZN",
    BAM: "BAM",
    BBD: "BBD",
    BDT: "BDT",
    BGN: "BGN",
    BHD: "BHD",
    BIF: "BIF",
    BMD: "BMD",
    BND: "BND",
    BOB: "BOB",
    BOV: "BOV",
    BRL: "BRL",
    BSD: "BSD",
    BTN: "BTN",
    BWP: "BWP",
    BYN: "BYN",
    BZD: "BZD",
    CAD: "CAD",
    CDF: "CDF",
    CHE: "CHE",
    CHF: "CHF",
    CHW: "CHW",
    CLF: "CLF",
    CLP: "CLP",
    CNY: "CNY",
    COP: "COP",
    COU: "COU",
    CRC: "CRC",
    CUC: "CUC",
    CUP: "CUP",
    CVE: "CVE",
    CZK: "CZK",
    DJF: "DJF",
    DKK: "DKK",
    DOP: "DOP",
    DZD: "DZD",
    EGP: "EGP",
    ERN: "ERN",
    ETB: "ETB",
    EUR: "EUR",
    FJD: "FJD",
    FKP: "FKP",
    GBP: "GBP",
    GEL: "GEL",
    GHS: "GHS",
    GIP: "GIP",
    GMD: "GMD",
    GNF: "GNF",
    GTQ: "GTQ",
    GYD: "GYD",
    HKD: "HKD",
    HNL: "HNL",
    HRK: "HRK",
    HTG: "HTG",
    HUF: "HUF",
    IDR: "IDR",
    ILS: "ILS",
    INR: "INR",
    IQD: "IQD",
    IRR: "IRR",
    ISK: "ISK",
    JMD: "JMD",
    JOD: "JOD",
    JPY: "JPY",
    KES: "KES",
    KGS: "KGS",
    KHR: "KHR",
    KMF: "KMF",
    KPW: "KPW",
    KRW: "KRW",
    KWD: "KWD",
    KYD: "KYD",
    KZT: "KZT",
    LAK: "LAK",
    LBP: "LBP",
    LKR: "LKR",
    LRD: "LRD",
    LSL: "LSL",
    LYD: "LYD",
    MAD: "MAD",
    MDL: "MDL",
    MGA: "MGA",
    MKD: "MKD",
    MMK: "MMK",
    MNT: "MNT",
    MOP: "MOP",
    MRU: "MRU",
    MUR: "MUR",
    MVR: "MVR",
    MWK: "MWK",
    MXN: "MXN",
    MXV: "MXV",
    MYR: "MYR",
    MZN: "MZN",
    NAD: "NAD",
    NGN: "NGN",
    NIO: "NIO",
    NOK: "NOK",
    NPR: "NPR",
    NZD: "NZD",
    OMR: "OMR",
    PAB: "PAB",
    PEN: "PEN",
    PGK: "PGK",
    PHP: "PHP",
    PKR: "PKR",
    PLN: "PLN",
    PYG: "PYG",
    QAR: "QAR",
    RON: "RON",
    RSD: "RSD",
    RUB: "RUB",
    RWF: "RWF",
    SAR: "SAR",
    SBD: "SBD",
    SCR: "SCR",
    SDG: "SDG",
    SEK: "SEK",
    SGD: "SGD",
    SHP: "SHP",
    SLL: "SLL",
    SOS: "SOS",
    SRD: "SRD",
    SSP: "SSP",
    STN: "STN",
    SVC: "SVC",
    SYP: "SYP",
    SZL: "SZL",
    THB: "THB",
    TJS: "TJS",
    TMT: "TMT",
    TND: "TND",
    TOP: "TOP",
    TRY: "TRY",
    TTD: "TTD",
    TWD: "TWD",
    TZS: "TZS",
    UAH: "UAH",
    UGX: "UGX",
    USD: "USD",
    USN: "USN",
    UYI: "UYI",
    UYU: "UYU",
    UZS: "UZS",
    VEF: "VEF",
    VND: "VND",
    VUV: "VUV",
    WST: "WST",
    XAF: "XAF",
    XCD: "XCD",
    XDR: "XDR",
    XOF: "XOF",
    XPF: "XPF",
    XSU: "XSU",
    XUA: "XUA",
    YER: "YER",
    ZAR: "ZAR",
    ZMW: "ZMW",
    ZWL: "ZWL",
};
exports.PaymentFrequency = {
    MONTHLY: "Monthly",
};
var EngagementContextPayload;
(function (EngagementContextPayload) {
    EngagementContextPayload.visit = (value, visitor) => {
        if (value.CustomerProject !== undefined)
            return visitor.CustomerProject(value.CustomerProject);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EngagementContextPayload || (exports.EngagementContextPayload = EngagementContextPayload = {}));
exports.EngagementContextType = {
    CUSTOMER_PROJECT: "CustomerProject",
};
class ServiceQuotaExceededException extends PartnerCentralSellingServiceException_1.PartnerCentralSellingServiceException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
exports.ServiceQuotaExceededException = ServiceQuotaExceededException;
exports.EngagementSortName = {
    CreatedDate: "CreatedDate",
};
exports.SortOrder = {
    ASCENDING: "ASCENDING",
    DESCENDING: "DESCENDING",
};
exports.ListTasksSortName = {
    START_TIME: "StartTime",
};
exports.TaskStatus = {
    COMPLETE: "COMPLETE",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
};
exports.ReasonCode = {
    ENGAGEMENT_ACCESS_DENIED: "EngagementAccessDenied",
    ENGAGEMENT_CONFLICT: "EngagementConflict",
    ENGAGEMENT_INVITATION_CONFLICT: "EngagementInvitationConflict",
    ENGAGEMENT_VALIDATION_FAILED: "EngagementValidationFailed",
    INTERNAL_ERROR: "InternalError",
    INVITATION_ACCESS_DENIED: "InvitationAccessDenied",
    INVITATION_VALIDATION_FAILED: "InvitationValidationFailed",
    OPPORTUNITY_ACCESS_DENIED: "OpportunityAccessDenied",
    OPPORTUNITY_CONFLICT: "OpportunityConflict",
    OPPORTUNITY_SUBMISSION_FAILED: "OpportunitySubmissionFailed",
    OPPORTUNITY_VALIDATION_FAILED: "OpportunityValidationFailed",
    REQUEST_THROTTLED: "RequestThrottled",
    RESOURCE_SNAPSHOT_ACCESS_DENIED: "ResourceSnapshotAccessDenied",
    RESOURCE_SNAPSHOT_CONFLICT: "ResourceSnapshotConflict",
    RESOURCE_SNAPSHOT_JOB_ACCESS_DENIED: "ResourceSnapshotJobAccessDenied",
    RESOURCE_SNAPSHOT_JOB_CONFLICT: "ResourceSnapshotJobConflict",
    RESOURCE_SNAPSHOT_JOB_VALIDATION_FAILED: "ResourceSnapshotJobValidationFailed",
    RESOURCE_SNAPSHOT_VALIDATION_FAILED: "ResourceSnapshotValidationFailed",
    SERVICE_QUOTA_EXCEEDED: "ServiceQuotaExceeded",
};
exports.SalesInvolvementType = {
    CO_SELL: "Co-Sell",
    FOR_VISIBILITY_ONLY: "For Visibility Only",
};
exports.Visibility = {
    FULL: "Full",
    LIMITED: "Limited",
};
exports.ReceiverResponsibility = {
    CO_SELL_FACILITATOR: "Co-Sell Facilitator",
    DISTRIBUTOR: "Distributor",
    FACILITATOR: "Facilitator",
    HARDWARE_PARTNER: "Hardware Partner",
    MANAGED_SERVICE_PROVIDER: "Managed Service Provider",
    RESELLER: "Reseller",
    SERVICES_PARTNER: "Services Partner",
    SOFTWARE_PARTNER: "Software Partner",
    TRAINING_PARTNER: "Training Partner",
};
var Payload;
(function (Payload) {
    Payload.visit = (value, visitor) => {
        if (value.OpportunityInvitation !== undefined)
            return visitor.OpportunityInvitation(value.OpportunityInvitation);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Payload || (exports.Payload = Payload = {}));
var Receiver;
(function (Receiver) {
    Receiver.visit = (value, visitor) => {
        if (value.Account !== undefined)
            return visitor.Account(value.Account);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(Receiver || (exports.Receiver = Receiver = {}));
exports.EngagementInvitationPayloadType = {
    OPPORTUNITY_INVITATION: "OpportunityInvitation",
};
exports.InvitationStatus = {
    ACCEPTED: "ACCEPTED",
    EXPIRED: "EXPIRED",
    PENDING: "PENDING",
    REJECTED: "REJECTED",
};
exports.ParticipantType = {
    RECEIVER: "RECEIVER",
    SENDER: "SENDER",
};
exports.OpportunityEngagementInvitationSortName = {
    INVITATION_DATE: "InvitationDate",
};
exports.ClosedLostReason = {
    CUSTOMER_DEFICIENCY: "Customer Deficiency",
    CUSTOMER_EXPERIENCE: "Customer Experience",
    DELAY_CANCELLATION_OF_PROJECT: "Delay / Cancellation of Project",
    FINANCIALCOMMERCIAL: "Financial/Commercial",
    LEGAL_TAX_REGULATORY: "Legal / Tax / Regulatory",
    LOST_TO_COMPETITOR_GOOGLE: "Lost to Competitor - Google",
    LOST_TO_COMPETITOR_MICROSOFT: "Lost to Competitor - Microsoft",
    LOST_TO_COMPETITOR_OTHER: "Lost to Competitor - Other",
    LOST_TO_COMPETITOR_SOFTLAYER: "Lost to Competitor - SoftLayer",
    LOST_TO_COMPETITOR_VMWARE: "Lost to Competitor - VMWare",
    NO_OPPORTUNITY: "No Opportunity",
    ON_PREMISES_DEPLOYMENT: "On Premises Deployment",
    OTHER: "Other",
    PARTNER_GAP: "Partner Gap",
    PEOPLERELATIONSHIPGOVERNANCE: "People/Relationship/Governance",
    PRICE: "Price",
    PRODUCTTECHNOLOGY: "Product/Technology",
    SECURITY_COMPLIANCE: "Security / Compliance",
    TECHNICAL_LIMITATIONS: "Technical Limitations",
};
exports.ReviewStatus = {
    ACTION_REQUIRED: "Action Required",
    APPROVED: "Approved",
    IN_REVIEW: "In review",
    PENDING_SUBMISSION: "Pending Submission",
    REJECTED: "Rejected",
    SUBMITTED: "Submitted",
};
exports.Stage = {
    BUSINESS_VALIDATION: "Business Validation",
    CLOSED_LOST: "Closed Lost",
    COMMITTED: "Committed",
    LAUNCHED: "Launched",
    PROSPECT: "Prospect",
    QUALIFIED: "Qualified",
    TECHNICAL_VALIDATION: "Technical Validation",
};
exports.Channel = {
    AWS_MARKETING_CENTRAL: "AWS Marketing Central",
    CONTENT_SYNDICATION: "Content Syndication",
    DISPLAY: "Display",
    EMAIL: "Email",
    LIVE_EVENT: "Live Event",
    OUT_OF_HOME: "Out Of Home (OOH)",
    PRINT: "Print",
    SEARCH: "Search",
    SOCIAL: "Social",
    TELEMARKETING: "Telemarketing",
    TV: "TV",
    VIDEO: "Video",
    VIRTUAL_EVENT: "Virtual Event",
};
exports.MarketingSource = {
    MARKETING_ACTIVITY: "Marketing Activity",
    NONE: "None",
};
exports.NationalSecurity = {
    NO: "No",
    YES: "Yes",
};
exports.OpportunityType = {
    EXPANSION: "Expansion",
    FLAT_RENEWAL: "Flat Renewal",
    NET_NEW_BUSINESS: "Net New Business",
};
exports.OpportunityOrigin = {
    AWS_REFERRAL: "AWS Referral",
    PARTNER_REFERRAL: "Partner Referral",
};
exports.PrimaryNeedFromAws = {
    CO_SELL_ARCHITECTURAL_VALIDATION: "Co-Sell - Architectural Validation",
    CO_SELL_BUSINESS_PRESENTATION: "Co-Sell - Business Presentation",
    CO_SELL_COMPETITIVE_INFORMATION: "Co-Sell - Competitive Information",
    CO_SELL_DEAL_SUPPORT: "Co-Sell - Deal Support",
    CO_SELL_PRICING_ASSISTANCE: "Co-Sell - Pricing Assistance",
    CO_SELL_SUPPORT_FOR_PUBLIC_TENDER_RFX: "Co-Sell - Support for Public Tender / RFx",
    CO_SELL_TECHNICAL_CONSULTATION: "Co-Sell - Technical Consultation",
    CO_SELL_TOTAL_COST_OF_OWNERSHIP_EVALUATION: "Co-Sell - Total Cost of Ownership Evaluation",
};
exports.CompetitorName = {
    AKAMAI: "Akamai",
    ALICLOUD: "AliCloud",
    CO_LOCATION: "Co-location",
    GOOGLE_CLOUD_PLATFORM: "Google Cloud Platform",
    IBM_SOFTLAYER: "IBM Softlayer",
    MICROSOFT_AZURE: "Microsoft Azure",
    NO_COMPETITION: "No Competition",
    ON_PREM: "On-Prem",
    ORACLE_CLOUD: "Oracle Cloud",
    OTHER: "*Other",
    OTHER_COST_OPTIMIZATION: "Other- Cost Optimization",
};
exports.DeliveryModel = {
    BYOL_OR_AMI: "BYOL or AMI",
    MANAGED_SERVICES: "Managed Services",
    OTHER: "Other",
    PROFESSIONAL_SERVICES: "Professional Services",
    RESELL: "Resell",
    SAAS_OR_PAAS: "SaaS or PaaS",
};
exports.SalesActivity = {
    AGREED_ON_SOLUTION_TO_BUSINESS_PROBLEM: "Agreed on solution to Business Problem",
    COMPLETED_ACTION_PLAN: "Completed Action Plan",
    CONDUCTED_POC_DEMO: "Conducted POC / Demo",
    CUSTOMER_HAS_SHOWN_INTEREST: "Customer has shown interest in solution",
    FINALIZED_DEPLOYMENT_NEEDS: "Finalized Deployment Need",
    INITIALIZED_DISCUSSIONS_WITH_CUSTOMER: "Initialized discussions with customer",
    IN_EVALUATION_PLANNING_STAGE: "In evaluation / planning stage",
    SOW_SIGNED: "SOW Signed",
};
exports.RevenueModel = {
    CONTRACT: "Contract",
    PAY_AS_YOU_GO: "Pay-as-you-go",
    SUBSCRIPTION: "Subscription",
};
exports.InvolvementTypeChangeReason = {
    CHANGE_IN_DEAL_INFORMATION: "Change in Deal Information",
    CUSTOMER_REQUESTED: "Customer Requested",
    EXPANSION_OPPORTUNITY: "Expansion Opportunity",
    RISK_MITIGATION: "Risk Mitigation",
    TECHNICAL_COMPLEXITY: "Technical Complexity",
};
exports.OpportunitySortName = {
    CUSTOMER_COMPANY_NAME: "CustomerCompanyName",
    IDENTIFIER: "Identifier",
    LAST_MODIFIEDDATE: "LastModifiedDate",
};
exports.ResourceType = {
    OPPORTUNITY: "Opportunity",
};
var ResourceSnapshotPayload;
(function (ResourceSnapshotPayload) {
    ResourceSnapshotPayload.visit = (value, visitor) => {
        if (value.OpportunitySummary !== undefined)
            return visitor.OpportunitySummary(value.OpportunitySummary);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ResourceSnapshotPayload || (exports.ResourceSnapshotPayload = ResourceSnapshotPayload = {}));
exports.ResourceSnapshotJobStatus = {
    RUNNING: "Running",
    STOPPED: "Stopped",
};
exports.SortBy = {
    CREATED_DATE: "CreatedDate",
};
exports.SolutionSortName = {
    CATEGORY: "Category",
    CREATEDDATE: "CreatedDate",
    IDENTIFIER: "Identifier",
    NAME: "Name",
    STATUS: "Status",
};
exports.SolutionStatus = {
    ACTIVE: "Active",
    DRAFT: "Draft",
    INACTIVE: "Inactive",
};
const AddressFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.City && { City: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.PostalCode && { PostalCode: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.StateOrRegion && { StateOrRegion: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.CountryCode && { CountryCode: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.StreetAddress && { StreetAddress: smithy_client_1.SENSITIVE_STRING }),
});
exports.AddressFilterSensitiveLog = AddressFilterSensitiveLog;
const AccountFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CompanyName && { CompanyName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.WebsiteUrl && { WebsiteUrl: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AwsAccountId && { AwsAccountId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Address && { Address: (0, exports.AddressFilterSensitiveLog)(obj.Address) }),
    ...(obj.Duns && { Duns: smithy_client_1.SENSITIVE_STRING }),
});
exports.AccountFilterSensitiveLog = AccountFilterSensitiveLog;
const AccountReceiverFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Alias && { Alias: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AwsAccountId && { AwsAccountId: smithy_client_1.SENSITIVE_STRING }),
});
exports.AccountReceiverFilterSensitiveLog = AccountReceiverFilterSensitiveLog;
const AddressSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.City && { City: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.PostalCode && { PostalCode: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.StateOrRegion && { StateOrRegion: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.CountryCode && { CountryCode: smithy_client_1.SENSITIVE_STRING }),
});
exports.AddressSummaryFilterSensitiveLog = AddressSummaryFilterSensitiveLog;
const AccountSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CompanyName && { CompanyName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.WebsiteUrl && { WebsiteUrl: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Address && { Address: (0, exports.AddressSummaryFilterSensitiveLog)(obj.Address) }),
});
exports.AccountSummaryFilterSensitiveLog = AccountSummaryFilterSensitiveLog;
const AssigneeContactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.BusinessTitle && { BusinessTitle: smithy_client_1.SENSITIVE_STRING }),
});
exports.AssigneeContactFilterSensitiveLog = AssigneeContactFilterSensitiveLog;
const AssignOpportunityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Assignee && { Assignee: (0, exports.AssigneeContactFilterSensitiveLog)(obj.Assignee) }),
});
exports.AssignOpportunityRequestFilterSensitiveLog = AssignOpportunityRequestFilterSensitiveLog;
const ContactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.BusinessTitle && { BusinessTitle: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Phone && { Phone: smithy_client_1.SENSITIVE_STRING }),
});
exports.ContactFilterSensitiveLog = ContactFilterSensitiveLog;
const AwsOpportunityCustomerFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Contacts && { Contacts: obj.Contacts.map((item) => (0, exports.ContactFilterSensitiveLog)(item)) }),
});
exports.AwsOpportunityCustomerFilterSensitiveLog = AwsOpportunityCustomerFilterSensitiveLog;
const AwsOpportunityLifeCycleFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NextSteps && { NextSteps: smithy_client_1.SENSITIVE_STRING }),
});
exports.AwsOpportunityLifeCycleFilterSensitiveLog = AwsOpportunityLifeCycleFilterSensitiveLog;
const ExpectedCustomerSpendFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CurrencyCode && { CurrencyCode: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.EstimationUrl && { EstimationUrl: smithy_client_1.SENSITIVE_STRING }),
});
exports.ExpectedCustomerSpendFilterSensitiveLog = ExpectedCustomerSpendFilterSensitiveLog;
const AwsOpportunityProjectFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExpectedCustomerSpend && {
        ExpectedCustomerSpend: obj.ExpectedCustomerSpend.map((item) => (0, exports.ExpectedCustomerSpendFilterSensitiveLog)(item)),
    }),
});
exports.AwsOpportunityProjectFilterSensitiveLog = AwsOpportunityProjectFilterSensitiveLog;
const AwsTeamMemberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: smithy_client_1.SENSITIVE_STRING }),
});
exports.AwsTeamMemberFilterSensitiveLog = AwsTeamMemberFilterSensitiveLog;
const EngagementCustomerFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CompanyName && { CompanyName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.WebsiteUrl && { WebsiteUrl: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.CountryCode && { CountryCode: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementCustomerFilterSensitiveLog = EngagementCustomerFilterSensitiveLog;
const EngagementCustomerProjectDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BusinessProblem && { BusinessProblem: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementCustomerProjectDetailsFilterSensitiveLog = EngagementCustomerProjectDetailsFilterSensitiveLog;
const CustomerProjectsContextFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Customer && { Customer: (0, exports.EngagementCustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.EngagementCustomerProjectDetailsFilterSensitiveLog)(obj.Project) }),
});
exports.CustomerProjectsContextFilterSensitiveLog = CustomerProjectsContextFilterSensitiveLog;
const EngagementContextPayloadFilterSensitiveLog = (obj) => {
    if (obj.CustomerProject !== undefined)
        return { CustomerProject: (0, exports.CustomerProjectsContextFilterSensitiveLog)(obj.CustomerProject) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.EngagementContextPayloadFilterSensitiveLog = EngagementContextPayloadFilterSensitiveLog;
const EngagementContextDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Payload && { Payload: (0, exports.EngagementContextPayloadFilterSensitiveLog)(obj.Payload) }),
});
exports.EngagementContextDetailsFilterSensitiveLog = EngagementContextDetailsFilterSensitiveLog;
const CreateEngagementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Contexts && { Contexts: obj.Contexts.map((item) => (0, exports.EngagementContextDetailsFilterSensitiveLog)(item)) }),
});
exports.CreateEngagementRequestFilterSensitiveLog = CreateEngagementRequestFilterSensitiveLog;
const GetEngagementResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Contexts && { Contexts: obj.Contexts.map((item) => (0, exports.EngagementContextDetailsFilterSensitiveLog)(item)) }),
});
exports.GetEngagementResponseFilterSensitiveLog = GetEngagementResponseFilterSensitiveLog;
const EngagementMemberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CompanyName && { CompanyName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AccountId && { AccountId: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementMemberFilterSensitiveLog = EngagementMemberFilterSensitiveLog;
const ListEngagementMembersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EngagementMemberList && {
        EngagementMemberList: obj.EngagementMemberList.map((item) => (0, exports.EngagementMemberFilterSensitiveLog)(item)),
    }),
});
exports.ListEngagementMembersResponseFilterSensitiveLog = ListEngagementMembersResponseFilterSensitiveLog;
const ListEngagementsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExcludeCreatedBy && { ExcludeCreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.ListEngagementsRequestFilterSensitiveLog = ListEngagementsRequestFilterSensitiveLog;
const EngagementSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementSummaryFilterSensitiveLog = EngagementSummaryFilterSensitiveLog;
const ListEngagementsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EngagementSummaryList && {
        EngagementSummaryList: obj.EngagementSummaryList.map((item) => (0, exports.EngagementSummaryFilterSensitiveLog)(item)),
    }),
});
exports.ListEngagementsResponseFilterSensitiveLog = ListEngagementsResponseFilterSensitiveLog;
const ProjectDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.BusinessProblem && { BusinessProblem: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExpectedCustomerSpend && {
        ExpectedCustomerSpend: obj.ExpectedCustomerSpend.map((item) => (0, exports.ExpectedCustomerSpendFilterSensitiveLog)(item)),
    }),
});
exports.ProjectDetailsFilterSensitiveLog = ProjectDetailsFilterSensitiveLog;
const SenderContactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.FirstName && { FirstName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.BusinessTitle && { BusinessTitle: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Phone && { Phone: smithy_client_1.SENSITIVE_STRING }),
});
exports.SenderContactFilterSensitiveLog = SenderContactFilterSensitiveLog;
const OpportunityInvitationPayloadFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SenderContacts && {
        SenderContacts: obj.SenderContacts.map((item) => (0, exports.SenderContactFilterSensitiveLog)(item)),
    }),
    ...(obj.Customer && { Customer: (0, exports.EngagementCustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectDetailsFilterSensitiveLog)(obj.Project) }),
});
exports.OpportunityInvitationPayloadFilterSensitiveLog = OpportunityInvitationPayloadFilterSensitiveLog;
const PayloadFilterSensitiveLog = (obj) => {
    if (obj.OpportunityInvitation !== undefined)
        return { OpportunityInvitation: (0, exports.OpportunityInvitationPayloadFilterSensitiveLog)(obj.OpportunityInvitation) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.PayloadFilterSensitiveLog = PayloadFilterSensitiveLog;
const ReceiverFilterSensitiveLog = (obj) => {
    if (obj.Account !== undefined)
        return { Account: (0, exports.AccountReceiverFilterSensitiveLog)(obj.Account) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.ReceiverFilterSensitiveLog = ReceiverFilterSensitiveLog;
const InvitationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Receiver && { Receiver: (0, exports.ReceiverFilterSensitiveLog)(obj.Receiver) }),
    ...(obj.Payload && { Payload: (0, exports.PayloadFilterSensitiveLog)(obj.Payload) }),
});
exports.InvitationFilterSensitiveLog = InvitationFilterSensitiveLog;
const CreateEngagementInvitationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Invitation && { Invitation: (0, exports.InvitationFilterSensitiveLog)(obj.Invitation) }),
});
exports.CreateEngagementInvitationRequestFilterSensitiveLog = CreateEngagementInvitationRequestFilterSensitiveLog;
const EngagementMemberSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CompanyName && { CompanyName: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementMemberSummaryFilterSensitiveLog = EngagementMemberSummaryFilterSensitiveLog;
const GetEngagementInvitationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SenderAwsAccountId && { SenderAwsAccountId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Receiver && { Receiver: (0, exports.ReceiverFilterSensitiveLog)(obj.Receiver) }),
    ...(obj.Payload && { Payload: (0, exports.PayloadFilterSensitiveLog)(obj.Payload) }),
    ...(obj.InvitationMessage && { InvitationMessage: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ExistingMembers && {
        ExistingMembers: obj.ExistingMembers.map((item) => (0, exports.EngagementMemberSummaryFilterSensitiveLog)(item)),
    }),
});
exports.GetEngagementInvitationResponseFilterSensitiveLog = GetEngagementInvitationResponseFilterSensitiveLog;
const ListEngagementInvitationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SenderAwsAccountId && { SenderAwsAccountId: smithy_client_1.SENSITIVE_STRING }),
});
exports.ListEngagementInvitationsRequestFilterSensitiveLog = ListEngagementInvitationsRequestFilterSensitiveLog;
const EngagementInvitationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SenderAwsAccountId && { SenderAwsAccountId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Receiver && { Receiver: (0, exports.ReceiverFilterSensitiveLog)(obj.Receiver) }),
});
exports.EngagementInvitationSummaryFilterSensitiveLog = EngagementInvitationSummaryFilterSensitiveLog;
const ListEngagementInvitationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EngagementInvitationSummaries && {
        EngagementInvitationSummaries: obj.EngagementInvitationSummaries.map((item) => (0, exports.EngagementInvitationSummaryFilterSensitiveLog)(item)),
    }),
});
exports.ListEngagementInvitationsResponseFilterSensitiveLog = ListEngagementInvitationsResponseFilterSensitiveLog;
const CustomerFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Account && { Account: (0, exports.AccountFilterSensitiveLog)(obj.Account) }),
    ...(obj.Contacts && { Contacts: obj.Contacts.map((item) => (0, exports.ContactFilterSensitiveLog)(item)) }),
});
exports.CustomerFilterSensitiveLog = CustomerFilterSensitiveLog;
const LifeCycleFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NextSteps && { NextSteps: smithy_client_1.SENSITIVE_STRING }),
});
exports.LifeCycleFilterSensitiveLog = LifeCycleFilterSensitiveLog;
const ProjectFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExpectedCustomerSpend && {
        ExpectedCustomerSpend: obj.ExpectedCustomerSpend.map((item) => (0, exports.ExpectedCustomerSpendFilterSensitiveLog)(item)),
    }),
    ...(obj.Title && { Title: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.CustomerBusinessProblem && { CustomerBusinessProblem: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.OtherSolutionDescription && { OtherSolutionDescription: smithy_client_1.SENSITIVE_STRING }),
});
exports.ProjectFilterSensitiveLog = ProjectFilterSensitiveLog;
const MonetaryValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CurrencyCode && { CurrencyCode: smithy_client_1.SENSITIVE_STRING }),
});
exports.MonetaryValueFilterSensitiveLog = MonetaryValueFilterSensitiveLog;
const SoftwareRevenueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: (0, exports.MonetaryValueFilterSensitiveLog)(obj.Value) }),
});
exports.SoftwareRevenueFilterSensitiveLog = SoftwareRevenueFilterSensitiveLog;
const CreateOpportunityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Customer && { Customer: (0, exports.CustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectFilterSensitiveLog)(obj.Project) }),
    ...(obj.SoftwareRevenue && { SoftwareRevenue: (0, exports.SoftwareRevenueFilterSensitiveLog)(obj.SoftwareRevenue) }),
    ...(obj.LifeCycle && { LifeCycle: (0, exports.LifeCycleFilterSensitiveLog)(obj.LifeCycle) }),
    ...(obj.OpportunityTeam && { OpportunityTeam: obj.OpportunityTeam.map((item) => (0, exports.ContactFilterSensitiveLog)(item)) }),
});
exports.CreateOpportunityRequestFilterSensitiveLog = CreateOpportunityRequestFilterSensitiveLog;
const GetAwsOpportunitySummaryResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LifeCycle && { LifeCycle: (0, exports.AwsOpportunityLifeCycleFilterSensitiveLog)(obj.LifeCycle) }),
    ...(obj.OpportunityTeam && {
        OpportunityTeam: obj.OpportunityTeam.map((item) => (0, exports.AwsTeamMemberFilterSensitiveLog)(item)),
    }),
    ...(obj.Customer && { Customer: (0, exports.AwsOpportunityCustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.AwsOpportunityProjectFilterSensitiveLog)(obj.Project) }),
});
exports.GetAwsOpportunitySummaryResponseFilterSensitiveLog = GetAwsOpportunitySummaryResponseFilterSensitiveLog;
const GetOpportunityResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Customer && { Customer: (0, exports.CustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectFilterSensitiveLog)(obj.Project) }),
    ...(obj.SoftwareRevenue && { SoftwareRevenue: (0, exports.SoftwareRevenueFilterSensitiveLog)(obj.SoftwareRevenue) }),
    ...(obj.LifeCycle && { LifeCycle: (0, exports.LifeCycleFilterSensitiveLog)(obj.LifeCycle) }),
    ...(obj.OpportunityTeam && { OpportunityTeam: obj.OpportunityTeam.map((item) => (0, exports.ContactFilterSensitiveLog)(item)) }),
});
exports.GetOpportunityResponseFilterSensitiveLog = GetOpportunityResponseFilterSensitiveLog;
const CustomerSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Account && { Account: (0, exports.AccountSummaryFilterSensitiveLog)(obj.Account) }),
});
exports.CustomerSummaryFilterSensitiveLog = CustomerSummaryFilterSensitiveLog;
const LifeCycleSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NextSteps && { NextSteps: smithy_client_1.SENSITIVE_STRING }),
});
exports.LifeCycleSummaryFilterSensitiveLog = LifeCycleSummaryFilterSensitiveLog;
const ProjectSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExpectedCustomerSpend && {
        ExpectedCustomerSpend: obj.ExpectedCustomerSpend.map((item) => (0, exports.ExpectedCustomerSpendFilterSensitiveLog)(item)),
    }),
});
exports.ProjectSummaryFilterSensitiveLog = ProjectSummaryFilterSensitiveLog;
const OpportunitySummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LifeCycle && { LifeCycle: (0, exports.LifeCycleSummaryFilterSensitiveLog)(obj.LifeCycle) }),
    ...(obj.Customer && { Customer: (0, exports.CustomerSummaryFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectSummaryFilterSensitiveLog)(obj.Project) }),
});
exports.OpportunitySummaryFilterSensitiveLog = OpportunitySummaryFilterSensitiveLog;
const ListOpportunitiesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OpportunitySummaries && {
        OpportunitySummaries: obj.OpportunitySummaries.map((item) => (0, exports.OpportunitySummaryFilterSensitiveLog)(item)),
    }),
});
exports.ListOpportunitiesResponseFilterSensitiveLog = ListOpportunitiesResponseFilterSensitiveLog;
const UpdateOpportunityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Customer && { Customer: (0, exports.CustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectFilterSensitiveLog)(obj.Project) }),
    ...(obj.SoftwareRevenue && { SoftwareRevenue: (0, exports.SoftwareRevenueFilterSensitiveLog)(obj.SoftwareRevenue) }),
    ...(obj.LifeCycle && { LifeCycle: (0, exports.LifeCycleFilterSensitiveLog)(obj.LifeCycle) }),
});
exports.UpdateOpportunityRequestFilterSensitiveLog = UpdateOpportunityRequestFilterSensitiveLog;
const LifeCycleForViewFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NextSteps && { NextSteps: smithy_client_1.SENSITIVE_STRING }),
});
exports.LifeCycleForViewFilterSensitiveLog = LifeCycleForViewFilterSensitiveLog;
const ProjectViewFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ExpectedCustomerSpend && {
        ExpectedCustomerSpend: obj.ExpectedCustomerSpend.map((item) => (0, exports.ExpectedCustomerSpendFilterSensitiveLog)(item)),
    }),
    ...(obj.OtherSolutionDescription && { OtherSolutionDescription: smithy_client_1.SENSITIVE_STRING }),
});
exports.ProjectViewFilterSensitiveLog = ProjectViewFilterSensitiveLog;
const OpportunitySummaryViewFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Lifecycle && { Lifecycle: (0, exports.LifeCycleForViewFilterSensitiveLog)(obj.Lifecycle) }),
    ...(obj.OpportunityTeam && { OpportunityTeam: obj.OpportunityTeam.map((item) => (0, exports.ContactFilterSensitiveLog)(item)) }),
    ...(obj.Customer && { Customer: (0, exports.CustomerFilterSensitiveLog)(obj.Customer) }),
    ...(obj.Project && { Project: (0, exports.ProjectViewFilterSensitiveLog)(obj.Project) }),
});
exports.OpportunitySummaryViewFilterSensitiveLog = OpportunitySummaryViewFilterSensitiveLog;
const ResourceSnapshotPayloadFilterSensitiveLog = (obj) => {
    if (obj.OpportunitySummary !== undefined)
        return { OpportunitySummary: (0, exports.OpportunitySummaryViewFilterSensitiveLog)(obj.OpportunitySummary) };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.ResourceSnapshotPayloadFilterSensitiveLog = ResourceSnapshotPayloadFilterSensitiveLog;
const GetResourceSnapshotResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Payload && { Payload: (0, exports.ResourceSnapshotPayloadFilterSensitiveLog)(obj.Payload) }),
});
exports.GetResourceSnapshotResponseFilterSensitiveLog = GetResourceSnapshotResponseFilterSensitiveLog;
const ListEngagementResourceAssociationsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.ListEngagementResourceAssociationsRequestFilterSensitiveLog = ListEngagementResourceAssociationsRequestFilterSensitiveLog;
const EngagementResourceAssociationSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.EngagementResourceAssociationSummaryFilterSensitiveLog = EngagementResourceAssociationSummaryFilterSensitiveLog;
const ListEngagementResourceAssociationsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.EngagementResourceAssociationSummaries && {
        EngagementResourceAssociationSummaries: obj.EngagementResourceAssociationSummaries.map((item) => (0, exports.EngagementResourceAssociationSummaryFilterSensitiveLog)(item)),
    }),
});
exports.ListEngagementResourceAssociationsResponseFilterSensitiveLog = ListEngagementResourceAssociationsResponseFilterSensitiveLog;
const ListResourceSnapshotsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.ListResourceSnapshotsRequestFilterSensitiveLog = ListResourceSnapshotsRequestFilterSensitiveLog;
const ResourceSnapshotSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CreatedBy && { CreatedBy: smithy_client_1.SENSITIVE_STRING }),
});
exports.ResourceSnapshotSummaryFilterSensitiveLog = ResourceSnapshotSummaryFilterSensitiveLog;
const ListResourceSnapshotsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ResourceSnapshotSummaries && {
        ResourceSnapshotSummaries: obj.ResourceSnapshotSummaries.map((item) => (0, exports.ResourceSnapshotSummaryFilterSensitiveLog)(item)),
    }),
});
exports.ListResourceSnapshotsResponseFilterSensitiveLog = ListResourceSnapshotsResponseFilterSensitiveLog;
